{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/helper.js","webpack:///./src/scripts/regions.js","webpack:///./src/scripts/ui.js","webpack:///./src/scripts/map.js","webpack:///./src/scripts/index.js","webpack:///./src/scripts/url.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","getMaxMinTab","table","prop","max","Math","parseFloat","min","SUBREGIONS","land_Subdistrict","AS2polygon","selectedSubregions","selectedSubregionsTable","features","forEach","elementsub","label","properties","SA22018__1","title","SA22018_V1","groupColumn","land_district","$","DataTable","columnDefs","orderable","className","targets","visible","select","style","selector","order","displayLength","rowGroup","dataSrc","on","e","dt","type","indexes","subreg","rows","toArray","selected","selectedelement","toString","updateTripLayerData","SPINNER_EL","document","getElementById","TRANSPORTTYPE","VIZTYPE","TransportModes","schemaDeplacement","closeBasemapList","is","css","click","MAP","U","setLayerSource","ready","multiselect","buttonContainer","buttonClass","templates","button","ul","onChange","element","checked","brands","each","index","brand","this","val","SAPOLYGON","change","selected_value","component","innerHTML","entries","htmlData","CENTER_CITIES","centroides","SOURCE_MAPBOX_PERSO","SOURCE_OSM","SOURCE_LINZ","INITIAL_VIEW_STATE","tabColorBlueToPurple","chroma","scale","mapboxgl","accessToken","centroideLayer","TripLayerEducation","TripLayerWork","Map","container","center","zoom","bearing","pitch","require","init","selectedIds","TypeOfTransport","removeLayer","largerList","selected_Trips","EDUCTAIONNAL_TRIPS","includes","SA2_code_educational_address","SA2_code_usual_residence_address","selected_centers_cities","SA22018_V1_00","cleanedselected_Trips","MinMax","pcolors","darkMode","flows","scheme","d3scaleChromatic","reverse","locationAreas","normal","outlineColor","MapboxLayer","FlowMapLayer","id","locations","animate","showTotals","showOnlyTopFlows","colors","animationCurrentTime","maxFlowThickness","getFlowColor","flow","getFlowMagnitude","getFlowOriginId","getFlowDestId","getLocationId","loc","getLocationCentroid","location","geometry","coordinates","addLayer","WORK_TRIPS","SA2_code_workplace_address","timestamp","Date","now","time","round","loopLength","setProps","requestAnimationFrame","visibility","console","log","Promise","all","resolve","axios","method","url","responseType","then","response","JSZip","loadAsync","zip","file","async","JSON","parse","catch","error","unique","dataitems","find","OBJECTID","addSource","layers","getStyle","hoveredStateId","setFeatureState","source","hover","initMap","GeoJsonLayer","filled","getRadius","radius","getFillColor","pickable","autoHighlight","onClick","info","alert","abbrev","Set","map","item"],"mappings":"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","file":"js/app.81e67a30.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([317,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export function getMaxMin(geojson, prop) {\r\n    var max = -10000000;\r\n    for (var i=0 ; i<geojson.length ; i++) {\r\n        max = Math.max(parseFloat(geojson[i][\"properties\"][prop]), max);\r\n    }\r\n\r\n    var min = 10000000;\r\n    for (var i=0 ; i<geojson.length ; i++) {\r\n        min = Math.min(parseFloat(geojson[i][\"properties\"][prop]), min);\r\n    }\r\n\r\n\r\n    return {min:min,max:max};\r\n}\r\n\r\n\r\n\r\nexport function getMaxMinTab(table, prop) {\r\n    var max = -10000000;\r\n    for (var i=0 ; i<table.length ; i++) {\r\n        max = Math.max(parseFloat(table[i][prop]), max);\r\n    }\r\n\r\n    var min = 10000000;\r\n    for (var i=0 ; i<table.length ; i++) {\r\n        if(parseFloat(table[i][prop] == -999)) {\r\n            continue;\r\n        }\r\n        min = Math.min(parseFloat(table[i][prop]), min);\r\n    }\r\n\r\n\r\n    return {min:min,max:max};\r\n}","\r\nimport {SAPOLYGON,EDUCTAIONNAL_TRIPS}from './index';\r\nimport {updateTripLayerData}from './map';\r\n\r\n\r\nexport function land_district(AS2polygon){\r\n    const unique = [...new Set(AS2polygon.features.map(item => item.properties.land_district))];\r\n    var list = document.getElementById('region-checkbox-list');\r\n    //unique.forEach(element => list.innerHTML += '<a class=\"list-group-item list-group-item-action\">' + element + '</li>');\r\n    //unique.forEach(element => list.innerHTML += '<option value=\"' + element +  '\">' + element + '</option>');\r\n\r\n \r\n\r\n    var dataitems = [];\r\n    unique.forEach(element => dataitems.push({label: element, value: element}));\r\n\r\n    $(\"#region-checkbox-list\").multiselect('dataprovider', dataitems);\r\n\r\n\r\n\r\n}\r\n\r\nexport let SUBREGIONS;\r\n/// SelectedRegions as array of regions selected by the user\r\nexport function land_Subdistrict(AS2polygon ){\r\n    //list-subregion\r\n    // \"SA22018_V1\": \"100400\",\r\n    // \"SA22018__1\": \"Karikari Peninsula\",\r\n    // \"id\": 100400,\r\n \r\n    let selectedSubregions = [];\r\n    let selectedSubregionsTable = [];\r\n    // var tempSub = (AS2polygon.features.filter(item => item.properties.land_district == element)) ;\r\n    var tempSub = AS2polygon.features  ;\r\n    tempSub.forEach(elementsub=>{\r\n        selectedSubregions.push({\r\n            label: elementsub.properties.SA22018__1,\r\n            title: elementsub.properties.SA22018__1,\r\n            value:  elementsub.properties.SA22018_V1,\r\n            groupColumn: elementsub.properties.land_district\r\n        });\r\n        selectedSubregionsTable.push([\r\n            '',\r\n             elementsub.properties.SA22018__1,\r\n             elementsub.properties.SA22018_V1,\r\n             elementsub.properties.land_district\r\n        ]);\r\n    });\r\n\r\n\r\n        // datatable element\r\n        let t = $('#tableregions').DataTable( \r\n            \r\n            {\r\n                data: selectedSubregionsTable,\r\n                columnDefs: [ {\r\n                    orderable: false,\r\n                    className: 'select-checkbox',\r\n                    targets:   0\r\n                    },\r\n                    { visible: false, targets: 3 }\r\n                ],\r\n                select: {\r\n                    style:    'os',\r\n                    selector: 'td:first-child',\r\n                    style: 'multi'\r\n                },\r\n                order: [[ 3, 'asc' ]],\r\n                //order: [[ 1, 'asc' ]],\r\n                displayLength: 25,\r\n                rowGroup: {\r\n                    dataSrc:3\r\n                }\r\n            }\r\n        );\r\n\r\n        // selectedSubregions.forEach(elementRow => {\r\n        //     t.row.add( [\r\n        //         '',\r\n        //         elementRow.label,\r\n        //         elementRow.value,\r\n        //         elementRow.groupColumn\r\n        //     ] ).draw( false );\r\n        // });\r\n\r\n\r\n        \r\n        t\r\n        .on( 'select', function ( e, dt, type, indexes ) {\r\n            var subreg = [];\r\n            var rowData = t.rows( indexes ).data().toArray();\r\n            t.rows( { selected: true } ).data().toArray().forEach(selectedelement => {\r\n                subreg.push( (selectedelement[2]).toString( ) );\r\n                \r\n            });\r\n            SUBREGIONS = subreg;\r\n            updateTripLayerData();\r\n        } )\r\n        .on( 'deselect', function ( e, dt, type, indexes ) {\r\n            var subreg = [];\r\n            var rowData = t.rows( indexes ).data().toArray();\r\n            t.rows( { selected: true } ).data().toArray().forEach(selectedelement => {\r\n                subreg.push( (selectedelement[2]).toString( ) );\r\n            });\r\n            SUBREGIONS = subreg;\r\n            updateTripLayerData();\r\n        } );\r\n        \r\n\r\n}\r\n","import {MAP,BASEMAPS_COURCES} from './map';\r\nimport {land_Subdistrict} from './regions';\r\nimport {SAPOLYGON}from './index';\r\nimport schemaDeplacement from '../data/schemaDeplacement.json';\r\nimport {updateTripLayerData}from './map';\r\n\r\n\r\nexport const SPINNER_EL = document.getElementById('loader');\r\n\r\nexport function stopSpinner(){\r\n    SPINNER_EL.style.visibility = \"hidden\";\r\n}\r\nexport function startSpinner(){\r\n    SPINNER_EL.style.visibility = \"visible\";\r\n}\r\n\r\nexport const TransportModes = schemaDeplacement;\r\nexport let TRANSPORTTYPE ;\r\n\r\nexport let VIZTYPE ; \r\n\r\n/* BaseMaps -------------------*/\r\n\r\nfunction closeBasemapList() {\r\n\tif($(\"#BasemapsList\").is(':visible')){\r\n\t\t$( \"#BasemapsList\" ).css('display', 'none'); //hidden\r\n\t\t$( \"#BasemapsList\" ).css('visibility', 'hidden'); //hidden\r\n\t}else{\r\n\t\t$( \"#BasemapsList\" ).css('display', 'flex'); //hidden\r\n\t\t$( \"#BasemapsList\" ).css('visibility', 'visible'); //hidden\r\n\t}\r\n};\r\n\r\n$( \"#menuItemBasemapsManager\" ).click(function() {\r\n\tcloseBasemapList();\r\n});\r\n$('.basemapsbtns').on('click', function () {\r\n\tcloseBasemapList();\r\n});\r\n\r\n\r\n\r\nfunction getlastLayerID(){\r\n    var layers = MAP.getStyle().layers;\r\n    // Find the index of the first symbol layer in the map style\r\n    var firstSymbolId;\r\n    for (var i = 0; i < layers.length; i++) {\r\n        if (layers[i].id === \"background\") {\r\n            firstSymbolId = i;\r\n            break;\r\n        }\r\n    }\r\n    return firstSymbolId +1;\r\n}\r\n\r\n//\r\n$( \"#BMMapBoxBasemap\" ).click(function() {\r\n    //MapBoxBasemap\r\n    MAP.U.setLayerSource('MapBoxBasemap', 'SOURCE_MAPBOX_PERSO');\r\n    \r\n});\r\n\r\n$( \"#BMOpenStreetMap\" ).click(function() {\r\n    //'OpenStreetMap'\r\n    MAP.U.setLayerSource('MapBoxBasemap', 'SOURCE_OSM');\r\n});\r\n$( \"#BMlinzImagery\" ).click(function() {\r\n    //linzImagery\r\n    MAP.U.setLayerSource('MapBoxBasemap', 'SOURCE_LINZ');\r\n});\r\n\r\n\r\n\r\n//--menuItemARselector\r\n$( \"#menuItemARselector\" ).click(function() {\r\n\t\r\n});\r\n\r\n\r\n$(document).ready(function() {\r\n    $('#region-checkbox-list').multiselect({\r\n        buttonContainer: '<div id=\"region-checkbox-list-container\"></div>',\r\n        buttonClass: '',\r\n        templates: {\r\n            button: '',\r\n            ul: '<ul class=\"multiselect-container checkbox-list\"></ul>',\r\n        },\r\n        onChange: function(element, checked) {\r\n            var brands = $('#region-checkbox-list option:selected');\r\n            var subreg = [];\r\n            $(brands).each(function(index, brand){\r\n                // alert([$(this).val()]);\r\n                // get the selected sub regions \r\n                subreg.push( $(this).val() );\r\n            });\r\n\r\n            land_Subdistrict(SAPOLYGON,subreg);\r\n\r\n        }\r\n    });\r\n\r\n\r\n    // Radio button Work / eductaion \r\n    $('input[name=\"TypeFlowRadio\"]').change(function(){\r\n        let selected_value = $('input[name=\"TypeFlowRadio\"]:checked').val();\r\n        var component = document.getElementById('DivTransportMode');\r\n        component.innerHTML = '';\r\n\r\n        if (selected_value == \"Educationnal\") {\r\n            for (const [key, value] of Object.entries(TransportModes[\"education\"])) {\r\n                var htmlData =\r\n                `<div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"transportType\" id=\"${key}\" value=\"${key}\">\r\n                    <label class=\"form-check-label\" for=\"${key}\">\r\n                    ${value}\r\n                    </label>\r\n                </div> `;\r\n                component.innerHTML += htmlData;\r\n            }\r\n        }else{\r\n            for (const [key, value] of Object.entries(TransportModes[\"work\"])) {\r\n                var htmlData =\r\n                `<div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"transportType\" id=\"${key}\" value=\"${key}\">\r\n                    <label class=\"form-check-label\" for=\"${key}\">\r\n                    ${value}\r\n                    </label>\r\n                </div> `;\r\n                component.innerHTML += htmlData;\r\n            }\r\n        }\r\n        // total by default\r\n        TRANSPORTTYPE = \"Total\";\r\n        $('#Total').prop('checked',true);\r\n\r\n        // change the flow dataviz\r\n        updateTripLayerData();\r\n\r\n        \r\n        $('input[name=\"transportType\"]').change(function(){\r\n            let selected_value = $('input[name=\"transportType\"]:checked').val();\r\n            TRANSPORTTYPE = selected_value;\r\n            // change the flow dataviz\r\n            updateTripLayerData();\r\n            \r\n        });\r\n    });\r\n\r\n\r\n    // change programmaticly Educationnal - initialisation\r\n    $('input[name=\"TypeFlowRadio\"]').val = 'Educationnal';\r\n    var component = document.getElementById('DivTransportMode');\r\n    component.innerHTML = '';\r\n    for (const [key, value] of Object.entries(TransportModes[\"education\"])) {\r\n        var htmlData =\r\n        `<div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"radio\" name=\"transportType\" id=\"${key}\" value=\"${key}\">\r\n            <label class=\"form-check-label\" for=\"${key}\">\r\n            ${value}\r\n            </label>\r\n        </div> `;\r\n        component.innerHTML += htmlData;\r\n    }\r\n    TRANSPORTTYPE = \"Total\";\r\n    $('#Total').prop('checked',true);\r\n\r\n\r\n\r\n\r\n    // initialise the first view \r\n    $('input[name=\"VizType\"]').change(function(){\r\n        let selected_value = $('input[name=\"VizType\"]:checked').val();\r\n        VIZTYPE = selected_value;\r\n        // change the flow dataviz\r\n        updateTripLayerData();\r\n    });\r\n    // default values \r\n    VIZTYPE = 'VizAnimation';\r\n\r\n});\r\n","import mapboxgl from 'mapbox-gl';\r\nimport {\r\n    Deck\r\n} from '@deck.gl/core';\r\nimport {\r\n    GeoJsonLayer,\r\n    ArcLayer\r\n} from '@deck.gl/layers';\r\nimport {\r\n    MapboxLayer\r\n} from '@deck.gl/mapbox';\r\nimport FlowMapLayer from '@flowmap.gl/core';\r\nimport {\r\n    TripsLayer\r\n} from '@deck.gl/geo-layers';\r\n\r\nimport chroma from \"chroma-js\";\r\n\r\n \r\n\r\nexport const MAPBOXKEY = 'pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA';\r\nexport const MAPBOXSTYLEBLUE = 'mapbox://styles/antonin64/cj6yh5j1qazk52ro1axmm3a6w';\r\nexport const MAPBOXSTYLEDARKDEFAULT = 'mapbox://styles/mapbox/dark-v9';\r\nexport const MAPBOXSTYLELIGHTDEFAULT = 'mapbox://styles/mapbox/light-v9';\r\nimport centroides from '../data/sa2centroides.json';\r\nimport {\r\n    getMaxMin, getMaxMinTab\r\n} from './helper';\r\nimport {\r\n    SAPOLYGON,\r\n    EDUCTAIONNAL_TRIPS,\r\n    WORK_TRIPS\r\n} from './index';\r\nimport * as d3scaleChromatic from 'd3-scale-chromatic';\r\n\r\nimport {SUBREGIONS} from './regions';\r\nimport {TRANSPORTTYPE,VIZTYPE} from './ui';\r\n\r\n\r\n\r\nconst CENTER_CITIES = centroides;\r\n// const {MapboxLayer, GeoJsonLayer} = deck;\r\nexport const CURRENTBASEMAP = {\r\n    'id': 'MapBoxBasemap',\r\n    'type': 'raster',\r\n    'source': {\r\n        'type': 'raster',\r\n        'tiles': ['https://api.mapbox.com/styles/v1/antonin64/cj6yh5j1qazk52ro1axmm3a6w/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA'],\r\n        'tileSize': 256\r\n    },\r\n    'paint': {}\r\n};\r\nexport const SOURCE_MAPBOX_PERSO = {\r\n    'type': 'raster',\r\n    'tiles': ['https://api.mapbox.com/styles/v1/antonin64/cj6yh5j1qazk52ro1axmm3a6w/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA'],\r\n    'tileSize': 256\r\n};\r\nexport const SOURCE_MAPBOX_LIGHT = {\r\n    'type': 'raster',\r\n    'tiles': ['https://api.mapbox.com/styles/v1/mapbox/light-v10/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA'],\r\n    'tileSize': 256\r\n};\r\nexport const SOURCE_MAPBOX_DARK = {\r\n    'type': 'raster',\r\n    'tiles': ['https://api.mapbox.com/styles/v1/mapbox/dark-v10/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA'],\r\n    'tileSize': 256\r\n};\r\nexport const SOURCE_OSM = {\r\n    'type': 'raster',\r\n    'tiles': ['https://b.tile.osm.org/{z}/{x}/{y}.png'],\r\n    'tileSize': 256\r\n};\r\nexport const SOURCE_LINZ = {\r\n    'type': 'raster',\r\n    'tiles': ['http://tiles-a.data-cdn.linz.govt.nz/services;key=f11577986e92458baa1bc5497c3c0d41/tiles/v4/set=4702/EPSG:3857/{z}/{x}/{y}.png'],\r\n    'tileSize': 256\r\n};\r\nexport let SYMBOL_LABEL_ID = '0';\r\nexport const INITIAL_VIEW_STATE = {\r\n    latitude: -43.53333,\r\n    longitude: 172.63333,\r\n    zoom: 3,\r\n    bearing: 30,\r\n    pitch: 30\r\n};\r\n\r\n\r\nconst tabColorYellowToRed = ['#ffff40', '#fffd3f', '#fffb3d', '#fff93b', '#fff73a', '#fff538', '#fff337', '#fff135', '#ffef34', '#ffed32', '#ffeb31', '#ffe930', '#ffe72e', '#ffe52d', '#ffe22c', '#ffe02a', '#ffde29', '#ffdc28', '#ffda27', '#fed826', '#fed624', '#fed423', '#fed222', '#fed021', '#fdce20', '#fdcc1f', '#fdca1e', '#fdc81d', '#fdc61c', '#fcc41a', '#fcc219', '#fcc018', '#fbbe17', '#fbbc16', '#fbba15', '#fbb814', '#fab613', '#fab412', '#fab211', '#f9af10', '#f9ad0f', '#f8ab0e', '#f8a90d', '#f8a70c', '#f7a50b', '#f7a30a', '#f7a109', '#f69f08', '#f69d08', '#f59b07', '#f59906', '#f49705', '#f49405', '#f49204', '#f39003', '#f38e03', '#f28c02', '#f28a02', '#f18801', '#f18501', '#f08300', '#f08100', '#ef7f00', '#ef7d00', '#ee7a00', '#ee7800', '#ed7600', '#ec7400', '#ec7100', '#eb6f00', '#eb6d00', '#ea6b00', '#ea6800', '#e96600', '#e96300', '#e86100', '#e75e00', '#e75c00', '#e65900', '#e55700', '#e55400', '#e45200', '#e44f00', '#e34c00', '#e24900', '#e24700', '#e14400', '#e04000', '#e03d00', '#df3a00', '#de3600', '#de3300', '#dd2f00', '#dc2b00', '#dc2700', '#db2200', '#da1c00', '#d91500', '#d90c00', '#d80000'];\r\n \r\nconst tabColorBlueToPurple = chroma.scale(['49b6ff', '779be7', 'a480cf', 'd264b6', 'ff499e', 'ef476f']);\r\n\r\n\r\n// Set your mapbox token here\r\nmapboxgl.accessToken = MAPBOXKEY; // eslint-disable-line\r\nconst emptyStyle = {\r\n    \"version\": 8,\r\n    \"name\": \"Empty\",\r\n    \"sources\": {},\r\n    \"layers\": [{\r\n        \"id\": \"background\",\r\n        \"type\": \"background\",\r\n        \"paint\": {\r\n            //\"background-color\": \"hsl(47, 26%, 88%)\"\r\n        }\r\n    }],\r\n    \"id\": \"empty\"\r\n};\r\nexport let MAP = new mapboxgl.Map({\r\n    container: 'map',\r\n    style: 'mapbox://styles/mapbox/dark-v10', // emptyStyle,\r\n    // Note: deck.gl will be in charge of interaction and event handling\r\n    // interactive: false,\r\n    center: [INITIAL_VIEW_STATE.longitude, INITIAL_VIEW_STATE.latitude],\r\n    zoom: INITIAL_VIEW_STATE.zoom,\r\n    bearing: INITIAL_VIEW_STATE.bearing,\r\n    pitch: INITIAL_VIEW_STATE.pitch\r\n});\r\nexport const U = require('mapbox-gl-utils').init(MAP);\r\nexport function initMap() {\r\n    MAP.on('load', function() {\r\n        // MAP.addLayer(CURRENTBASEMAP);\r\n        MAP.addSource('SOURCE_LINZ', SOURCE_LINZ);\r\n        MAP.addSource('SOURCE_OSM', SOURCE_OSM);\r\n        MAP.addSource('SOURCE_MAPBOX_PERSO', SOURCE_MAPBOX_PERSO);\r\n        // MAP.addSource('SOURCE_MAPBOX_LIGHT', SOURCE_MAPBOX_LIGHT);\r\n        // MAP.addControl(new mapboxgl.AttributionControl(), 'top-right');\r\n        // symbol id\r\n        var layers = MAP.getStyle().layers;\r\n        // Find the index of the first symbol layer in the map style\r\n        for (var i = 0; i < layers.length; i++) {\r\n            if (layers[i].type === 'symbol') {\r\n                SYMBOL_LABEL_ID = layers[i].id;\r\n                break;\r\n            }\r\n        }\r\n    });\r\n    // // MAP.on('mousemove', ({point}) => {\r\n    // //   if (polygonSA2Layer) {\r\n    // //     polygonSA2Layer.setProps({mousePosition: [point.x, point.y]});\r\n    // //   }\r\n    // // });\r\n    // // When the user moves their mouse over the state-fill layer, we'll update the\r\n    // // feature state for the feature under the mouse.\r\n    MAP.on('mousemove', 'sa2OverFills', function(e) {\r\n        if (e.features.length > 0) {\r\n            if (hoveredStateId) {\r\n                MAP.setFeatureState({\r\n                    source: 'sa2OverSource',\r\n                    id: hoveredStateId\r\n                }, {\r\n                    hover: false\r\n                });\r\n            }\r\n            hoveredStateId = e.features[0].id;\r\n            MAP.setFeatureState({\r\n                source: 'sa2OverSource',\r\n                id: hoveredStateId\r\n            }, {\r\n                hover: true\r\n            });\r\n        }\r\n    });\r\n    var hoveredStateId = null;\r\n    // When the mouse leaves the state-fill layer, update the feature state of the\r\n    // previously hovered feature.\r\n    MAP.on('mouseleave', 'sa2OverFills', function() {\r\n        if (hoveredStateId) {\r\n            MAP.setFeatureState({\r\n                source: 'sa2OverSource',\r\n                id: hoveredStateId\r\n            }, {\r\n                hover: false\r\n            });\r\n        }\r\n        hoveredStateId = null;\r\n    });\r\n    // MAP.on('mousemove', function() {\r\n    //     // sizecentroides =   MAP.getZoom();\r\n    //     // renderLayer(sizecentroides,null);\r\n    // });\r\n    MAP.on('zoom', function() {\r\n        // sizecentroides =   MAP.getZoom();\r\n        // renderLayer(sizecentroides,null);\r\n    });\r\n}\r\nexport let centroideLayer;\r\nexport let polygonSA2Layer;\r\nexport function initDeckglLayers() {\r\n    // Addin the deckgl layers\r\n    centroideLayer = new MapboxLayer({\r\n        type: GeoJsonLayer,\r\n        id: 'centroides',\r\n        data: [],\r\n        // Styles\r\n        filled: true,\r\n        getRadius: 50, //(1/psizecentroides)*2000,\r\n        radius: 10,\r\n        getFillColor: [178, 245, 86, 180],\r\n        pickable: true,\r\n        autoHighlight: true,\r\n        onClick: info =>\r\n            info.object && alert(`${info.object.properties.name} (${info.object.properties.abbrev})`)\r\n    });\r\n    MAP.addLayer(centroideLayer);\r\n    centroideLayer.setProps({\r\n        [\"data\"]: CENTER_CITIES\r\n    });\r\n    MAP.addSource('sa2OverSource', {\r\n        'type': 'geojson',\r\n        'data': SAPOLYGON\r\n    });\r\n    polygonSA2Layer = MAP.addLayer({\r\n        'id': 'sa2OverFills',\r\n        'type': 'fill',\r\n        'source': 'sa2OverSource',\r\n        'layout': {},\r\n        'paint': {\r\n            'fill-color': '#ffffff',\r\n            'fill-opacity': [\r\n                'case',\r\n                ['boolean', ['feature-state', 'hover'], false],\r\n                0.3,\r\n                0.0\r\n            ]\r\n        }\r\n    });\r\n    MAP.addLayer({\r\n        'id': 'sa2OverLines',\r\n        'type': 'line',\r\n        'source': 'sa2OverSource',\r\n        'layout': {},\r\n        'paint': {\r\n            'line-color': '#000000',\r\n            'line-width': 1\r\n        }\r\n    });\r\n    // var dataset = SAPOLYGON;\r\n    // polygonSA2Layer = new MapboxLayer({\r\n    //     type: GeoJsonLayer,\r\n    //     id: 'geojson-layer',\r\n    //     data : SAPOLYGON,\r\n    //     pickable: true,\r\n    //     stroked: false,\r\n    //     filled: true,\r\n    //     extruded: true,\r\n    //     lineWidthScale: 20,\r\n    //     lineWidthMinPixels: 2,\r\n    //     getFillColor: [160, 160, 180, 200],\r\n    //     getLineColor:  [160, 160, 180, 200],\r\n    //     getRadius: 100,\r\n    //     getLineWidth: 1,\r\n    //     getElevation: 30\r\n    //   });\r\n    //   MAP.addLayer(polygonSA2Layer );\r\n    // TripLayer = new MapboxLayer({\r\n    //     type: FlowMapLayer,\r\n    //     id: 'trips',\r\n    //     locations: [], //   CENTER_CITIES,\r\n    //     flows: [], // tripsEducationJson,\r\n    //     getFlowMagnitude: (flow) => flow.Study_at_home /10 || 0,\r\n    //     getFlowOriginId: (flow) => flow.SA2_code_usual_residence_address,\r\n    //     getFlowDestId: (flow) => flow.SA2_code_educational_address,\r\n    //     getLocationId: (loc) => loc.properties.SA22018_V1_00,\r\n    //     getLocationCentroid: (location) => [location.geometry.coordinates[0],location.geometry.coordinates[1]],\r\n    // });\r\n    // TripLayer = new MapboxLayer({\r\n    //     type: FlowMapLayer,\r\n    //     id: 'trips',\r\n    //     locations: [], //   CENTER_CITIES,\r\n    //     flows: [], // tripsEducationJson,\r\n    //     animate: 'animated',\r\n    //     // getAnimatedFlowLineStaggering: (d) =>new alea(`${d.origin}-${d.dest}`)(),\r\n    //     showTotals: true,\r\n    //     visible: true,\r\n    //     highlightedFlow:'flow',\r\n    //     animationCurrentTime: 100,\r\n    //     getFlowMagnitude: (flow) => flow.Study_at_home /10 || 0,\r\n    //     getFlowOriginId: (flow) => flow.SA2_code_usual_residence_address,\r\n    //     getFlowDestId: (flow) => flow.SA2_code_educational_address,\r\n    //     getLocationId: (loc) => loc.properties.SA22018_V1_00,\r\n    //     getLocationCentroid: (location) => [location.geometry.coordinates[0],location.geometry.coordinates[1]],\r\n    // });\r\n    // MAP.addLayer(TripLayer );\r\n    // animate(0);\r\n};\r\nexport let TripLayerEducation;\r\nexport let TripLayerWork;\r\nfunction animate() {\r\n    var loopLength = 18000; // unit corresponds to the timestamp in source data\r\n    var animationSpeed = 30; // unit time per second\r\n    const timestamp = Date.now() / 1000;\r\n    const loopTime = loopLength / animationSpeed;\r\n    var time = Math.round(((timestamp % loopTime) / loopTime) * loopLength);\r\n    // WHAT SHOULD I DO NOW???\r\n    if (TripLayerEducation) {\r\n        TripLayerEducation.setProps({\r\n            [\"animationCurrentTime\"]: time\r\n        });\r\n    }\r\n    if (TripLayerWork) {\r\n        TripLayerWork.setProps({\r\n            [\"animationCurrentTime\"]: time\r\n        });\r\n    }\r\n    window.requestAnimationFrame(animate.bind(this));\r\n}\r\nexport const MIN_ZOOM_LEVEL = 0;\r\nexport const MAX_ZOOM_LEVEL = 20;\r\n// This function will update the layer trips providing a lists of ids to display\r\nexport function updateTripLayerData() {\r\n    \r\n    let selectedIds = SUBREGIONS ; \r\n    let TypeOfTransport = TRANSPORTTYPE; \r\n\r\n\r\n    if(!selectedIds) return;\r\n\r\n    // delete previously selected\r\n    if (TripLayerEducation!= null && TripLayerEducation) {\r\n        if (typeof TripLayerEducation != 'undefined') {\r\n            // Remove map layer & source.\r\n            MAP.removeLayer('tripsEducation');\r\n        }\r\n    }\r\n    if (TripLayerWork) {\r\n        if (typeof TripLayerWork != 'undefined') {\r\n            // Remove map layer & source.\r\n            MAP.removeLayer('tripsWork');\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // limiting tripsEducationJson\r\n    // SA2_code_educational_address: 100100\r\n    // SA2_code_usual_residence_address: 100100\r\n    // SA2_name_educational_address: \"North Cape\"\r\n    // SA2_name_usual_residence_address: \"North Cape\"\r\n    // Are we in eduction mode ?\r\n    if ($('input[name=\"TypeFlowRadio\"]:checked').val() == \"Educationnal\") {\r\n        let largerList = [];\r\n        let selected_Trips = [];\r\n        EDUCTAIONNAL_TRIPS.forEach(element => {\r\n            if (selectedIds.includes(element.SA2_code_educational_address.toString()) || selectedIds.includes(element.SA2_code_usual_residence_address.toString())) {\r\n                // add the element\r\n                selected_Trips.push(element);\r\n                if (!largerList.includes(element.SA2_code_educational_address.toString())) {\r\n                    largerList.push(element.SA2_code_educational_address.toString());\r\n                }\r\n                if (!largerList.includes(element.SA2_code_usual_residence_address.toString())) {\r\n                    largerList.push(element.SA2_code_usual_residence_address.toString());\r\n                }\r\n            }\r\n        });\r\n        // only display the selected flows  selectedIds\r\n        // CENTER_CITIES\r\n        // const unique = [...new Set(AS2polygon.features.map(item => item.properties.land_district))];\r\n        // property SA22018_V1_00: \"105300\"\r\n        let selected_centers_cities = {\r\n            type: \"FeatureCollection\",\r\n            features: []\r\n        };\r\n        CENTER_CITIES.features.forEach(element => {\r\n            if (largerList.includes(element.properties.SA22018_V1_00)) {\r\n                // add the element\r\n                selected_centers_cities.features.push(element);\r\n            }\r\n        });\r\n\r\n\r\n        var cleanedselected_Trips = selected_Trips;\r\n        var i = cleanedselected_Trips.length;\r\n        while (i--) {\r\n            if (cleanedselected_Trips[i][TypeOfTransport] == -999) { \r\n                cleanedselected_Trips.splice(i, 1);\r\n            } \r\n        }\r\n        // get the max \r\n        var MinMax = getMaxMinTab(cleanedselected_Trips,TypeOfTransport);\r\n\r\n        \r\n\r\n        const scheme = (d3scaleChromatic.schemeGnBu[d3scaleChromatic.schemeGnBu.length - 1])\r\n            .slice()\r\n            .reverse();\r\n        const pcolors = {\r\n            darkMode: true,\r\n            flows: {\r\n                scheme,\r\n            },\r\n            locationAreas: {\r\n                normal: '#334',\r\n            },\r\n            outlineColor: '#000',\r\n        };\r\n\r\n\r\n\r\n\r\n        if(VIZTYPE == 'VizAnimation'){\r\n            TripLayerEducation = new MapboxLayer({\r\n                type: FlowMapLayer,\r\n                id: 'tripsEducation',\r\n                locations: selected_centers_cities, //   CENTER_CITIES,\r\n                flows: selected_Trips, // tripsEducationJson,\r\n                animate: 'animated',\r\n                // getAnimatedFlowLineStaggering: (d) =>new alea(`${d.origin}-${d.dest}`)(),\r\n                showTotals: true,\r\n                visible: true,\r\n                showOnlyTopFlows: 500,\r\n                //highlightedFlow:'flow',\r\n                colors: pcolors, // https://github.com/etra0/flowmap.gl/blob/master/examples/src/stories/basic.tsx\r\n                animationCurrentTime: 100,\r\n                maxFlowThickness:8,\r\n                getFlowColor:(flow) => {   \r\n                    if(flow[TypeOfTransport]/ MinMax.max > 1 ){\r\n                        debugger;\r\n                    }\r\n                    return  ((flow[TypeOfTransport] == -999) ? tabColorBlueToPurple(0): tabColorBlueToPurple((flow[TypeOfTransport]/ MinMax.max)));    \r\n                },\r\n                getFlowMagnitude: (flow) => flow[TypeOfTransport]  || 0,  //  flow.Study_at_home / 10 || 0,\r\n                getFlowOriginId: (flow) => flow.SA2_code_usual_residence_address,\r\n                getFlowDestId: (flow) => flow.SA2_code_educational_address,\r\n                getLocationId: (loc) => loc.properties.SA22018_V1_00,\r\n                getLocationCentroid: (location) => [location.geometry.coordinates[0], location.geometry.coordinates[1]],\r\n            });\r\n\r\n        }else{\r\n            TripLayerEducation = new MapboxLayer({\r\n                type: FlowMapLayer,\r\n                id: 'tripsEducation',\r\n                locations: selected_centers_cities,\r\n                flows: selected_Trips,\r\n                showTotals: true,\r\n                visible: true,\r\n                maxFlowThickness:25,\r\n                showOnlyTopFlows: 500,\r\n                //highlightedFlow:'flow',\r\n                colors: pcolors, // https://github.com/etra0/flowmap.gl/blob/master/examples/src/stories/basic.tsx\r\n                getFlowColor:(flow) => {   \r\n                    return  ((flow[TypeOfTransport] == -999) ? tabColorBlueToPurple(0): tabColorBlueToPurple((flow[TypeOfTransport]/ MinMax.max)));    \r\n                },\r\n                getFlowMagnitude: (flow) => flow[TypeOfTransport] * 10 || 0,  //  flow.Study_at_home / 10 || 0,\r\n                getFlowOriginId: (flow) => flow.SA2_code_usual_residence_address,\r\n                getFlowDestId: (flow) => flow.SA2_code_educational_address,\r\n                getLocationId: (loc) => loc.properties.SA22018_V1_00,\r\n                getLocationCentroid: (location) => [location.geometry.coordinates[0], location.geometry.coordinates[1]],\r\n            });\r\n        }\r\n\r\n        MAP.addLayer(TripLayerEducation);\r\n\r\n\r\n    }else if ($('input[name=\"TypeFlowRadio\"]:checked').val() == \"Work\") {\r\n        let largerList = [];\r\n        let selected_Trips = [];\r\n        WORK_TRIPS.forEach(element => {\r\n            if (selectedIds.includes(element.SA2_code_workplace_address.toString()) || selectedIds.includes(element.SA2_code_usual_residence_address.toString())) {\r\n                // add the element\r\n                selected_Trips.push(element);\r\n                if (!largerList.includes(element.SA2_code_workplace_address.toString())) {\r\n                    largerList.push(element.SA2_code_workplace_address.toString());\r\n                }\r\n                if (!largerList.includes(element.SA2_code_usual_residence_address.toString())) {\r\n                    largerList.push(element.SA2_code_usual_residence_address.toString());\r\n                }\r\n            }\r\n        });\r\n        let selected_centers_cities = {\r\n            type: \"FeatureCollection\",\r\n            features: []\r\n        };\r\n        CENTER_CITIES.features.forEach(element => {\r\n            if (largerList.includes(element.properties.SA22018_V1_00)) {\r\n                // add the element\r\n                selected_centers_cities.features.push(element);\r\n            }\r\n        });\r\n        const scheme = (d3scaleChromatic.schemeOrRd[d3scaleChromatic.schemeOrRd.length - 1])\r\n            .slice()\r\n            .reverse();\r\n        const pcolors = {\r\n            darkMode: true,\r\n            flows: {\r\n                scheme,\r\n            },\r\n            locationAreas: {\r\n                normal: '#334',\r\n            },\r\n            outlineColor: '#000',\r\n        };\r\n\r\n\r\n\r\n        var cleanedselected_Trips = selected_Trips;\r\n        var i = cleanedselected_Trips.length;\r\n        while (i--) {\r\n            if (cleanedselected_Trips[i][TypeOfTransport] == -999) { \r\n                cleanedselected_Trips.splice(i, 1);\r\n            } \r\n        }\r\n        // get the max \r\n        var MinMax = getMaxMinTab(cleanedselected_Trips,TypeOfTransport);\r\n\r\n\r\n        if(VIZTYPE == 'VizAnimation'){\r\n            TripLayerWork = new MapboxLayer({\r\n                type: FlowMapLayer,\r\n                id: 'tripsWork',\r\n                locations: selected_centers_cities, //   CENTER_CITIES,\r\n                flows: selected_Trips, // tripsEducationJson,\r\n                animate: 'animated',\r\n                // getAnimatedFlowLineStaggering: (d) =>new alea(`${d.origin}-${d.dest}`)(),\r\n                showTotals: true,\r\n                visible: true,\r\n                showOnlyTopFlows: 500,\r\n                //highlightedFlow:'flow',\r\n                colors: pcolors, // https://github.com/etra0/flowmap.gl/blob/master/examples/src/stories/basic.tsx\r\n                animationCurrentTime: 100,\r\n                maxFlowThickness:8,\r\n                getFlowColor:(flow) => {   \r\n                    return  ((flow[TypeOfTransport] == -999) ? tabColorBlueToPurple(0): tabColorBlueToPurple((flow[TypeOfTransport]/ MinMax.max)));    \r\n                },\r\n                getFlowMagnitude:   (flow) => flow[TypeOfTransport]  || 0,  //  flow.Study_at_home / 10 || 0,\r\n                getFlowOriginId: (flow) => flow.SA2_code_usual_residence_address,\r\n                getFlowDestId: (flow) => flow.SA2_code_workplace_address,\r\n                getLocationId: (loc) => loc.properties.SA22018_V1_00,\r\n                getLocationCentroid: (location) => [location.geometry.coordinates[0], location.geometry.coordinates[1]],\r\n            });\r\n        }else{\r\n            TripLayerWork = new MapboxLayer({\r\n                type: FlowMapLayer,\r\n                id: 'tripsWork',\r\n                locations: selected_centers_cities, \r\n                flows: selected_Trips, \r\n                showTotals: true,\r\n                visible: true,\r\n                showOnlyTopFlows: 500,\r\n                //highlightedFlow:'flow',\r\n                colors: pcolors, // https://github.com/etra0/flowmap.gl/blob/master/examples/src/stories/basic.tsx\r\n                animationCurrentTime: 100,\r\n                maxFlowThickness:8,\r\n                getFlowColor:(flow) => {   \r\n                    return  ((flow[TypeOfTransport] == -999) ? tabColorBlueToPurple(0): tabColorBlueToPurple((flow[TypeOfTransport]/ MinMax.max)));    \r\n                },\r\n                getFlowMagnitude:   (flow) => flow[TypeOfTransport]  || 0,  //  flow.Study_at_home / 10 || 0,\r\n                getFlowOriginId: (flow) => flow.SA2_code_usual_residence_address,\r\n                getFlowDestId: (flow) => flow.SA2_code_workplace_address,\r\n                getLocationId: (loc) => loc.properties.SA22018_V1_00,\r\n                getLocationCentroid: (location) => [location.geometry.coordinates[0], location.geometry.coordinates[1]],\r\n            });\r\n        }\r\n\r\n\r\n        MAP.addLayer(TripLayerWork);\r\n    }\r\n    animate(0);\r\n    //TripLayer.setProps({[\"locations\"]: selected_centers_cities , [\"flows\"]: selected_Trips });\r\n}","import '../styles/index.scss';\r\nimport JSZip from \"jszip\";\r\nimport axios from 'axios';\r\nimport {MAP,initMap,centroideLayer,initDeckglLayers} from './map';\r\n//import {renderLayer}from './vizmap';\r\nimport {URL_TRIP_EDUCATION,URL_SA2POLYGONS,URL_TRIP_WORK} from './url';\r\nimport {stopSpinner,startSpinner} from './ui';\r\nimport {land_district} from './regions';\r\nimport './ui';\r\nimport {land_Subdistrict} from './regions';\r\n\r\n\r\nstartSpinner();\r\n// initialise map\r\n \r\nvar resolveCensusDataEducation = function() {\r\n  console.log(\"getting Education data\");\r\n  return new Promise(resolve => {\r\n    axios({\r\n      method: 'get',\r\n      url: URL_TRIP_EDUCATION,\r\n      responseType: 'blob'\r\n    }).then(function (response) {\r\n      var new_zip = new JSZip();\r\n      new_zip.loadAsync(response.data)\r\n      .then(function(zip) {\r\n          zip.file(\"2018-census-main-means-of-travel-to-education-by-statistical.json\").async(\"string\").then(function (data) {\r\n              resolve(   {type: 'eductionTrip', data: JSON.parse(data)}    );\r\n              return data;\r\n            });\r\n      });\r\n      return response.data;\r\n    })\r\n    .catch(error => console.log(error));\r\n  });\r\n};\r\n// work 2018-census-main-means-of-travel-to-work-by-statistical-area.zip\r\nvar resolveCensusDataWork = function() {\r\n  console.log(\"getting Education data\");\r\n  return new Promise(resolve => {\r\n    axios({\r\n      method: 'get',\r\n      url: URL_TRIP_WORK,\r\n      responseType: 'blob'\r\n    }).then(function (response) {\r\n      var new_zip = new JSZip();\r\n      new_zip.loadAsync(response.data)\r\n      .then(function(zip) {\r\n          zip.file(\"2018-census-main-means-of-travel-to-work-by-statistical-area.json\").async(\"string\").then(function (data) {\r\n              resolve(   {type: 'workTrip', data: JSON.parse(data)}    );\r\n              return data;\r\n            });\r\n      });\r\n      return response.data;\r\n    })\r\n    .catch(error => console.log(error));\r\n  });\r\n};\r\nvar resolveSA2polygons = function() {\r\n  console.log(\"getting Education data\");\r\n  return new Promise(resolve => {\r\n    axios({\r\n      method: 'get',\r\n      url: URL_SA2POLYGONS,\r\n      responseType: 'blob'\r\n    }).then(function (response) {\r\n      var new_zip = new JSZip();\r\n      new_zip.loadAsync(response.data)\r\n      .then(function(zip) {\r\n          zip.file(\"sa2aggregatewgs84.geojson\").async(\"string\").then(function (data) {\r\n              resolve(   {type: 'sa2', data: JSON.parse(data)}    );\r\n              return data;\r\n            });\r\n      });\r\n      return response.data;\r\n    })\r\n    .catch(error => console.log(error));\r\n  });\r\n};\r\n\r\n \r\nexport let SAPOLYGON;\r\nexport let EDUCTAIONNAL_TRIPS;\r\nexport let WORK_TRIPS;\r\nvar initialisedataparallel = function() {\r\n  console.log('==parallel initialisation==');\r\n  return Promise.all([resolveCensusDataEducation(), resolveSA2polygons(), resolveCensusDataWork()]).then((data) => {\r\n    \r\n    // console.log(data[0]); // lente\r\n    // console.log(data[1]); // rapide\r\n    // console.log(data[2]); // rapide\r\n    // Data is here, start initialising map data\r\n    \r\n    // let parseData = JSON.parse(data);\r\n    SAPOLYGON = data.find(element => element.type == 'sa2').data;\r\n    SAPOLYGON.features.forEach(element => {\r\n      element.id = element.properties.OBJECTID;\r\n    });\r\n    EDUCTAIONNAL_TRIPS = data.find(element => element.type == 'eductionTrip').data;\r\n    WORK_TRIPS = data.find(element => element.type == 'workTrip').data;\r\n    initMap();\r\n  \r\n    // renderLayer(\r\n    //   null,\r\n    //   EDUCTAIONNAL_TRIPS ,\r\n    //   SAPOLYGON,\r\n    //   []);\r\n    initDeckglLayers();\r\n    land_district(SAPOLYGON);\r\n    land_Subdistrict(SAPOLYGON);\r\n    stopSpinner();\r\n  });\r\n};\r\ninitialisedataparallel();\r\n","export const URL_TRIP_WORK = \"https://127.0.0.1/2018-census-main-means-of-travel-to-work-by-statistical-area.zip\";\r\nexport const URL_TRIP_EDUCATION = \"https://127.0.0.1/2018-census-main-means-of-travel-to-education-by-statistical.zip\";\r\nexport const URL_SA2POLYGONS = \"https://127.0.0.1/sa2aggregatewgs84.zip\";"],"sourceRoot":""}