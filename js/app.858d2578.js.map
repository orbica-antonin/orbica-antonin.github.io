{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/helper.js","webpack:///./src/scripts/regions.js","webpack:///./src/scripts/ui.js","webpack:///./src/scripts/map.js","webpack:///./src/scripts/index.js","webpack:///./src/scripts/url.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","getMaxMinTab","table","prop","max","Math","parseFloat","min","SUBREGIONS","land_Subdistrict","AS2polygon","selectedSubregions","selectedSubregionsTable","features","forEach","elementsub","label","properties","SA22018__1","title","SA22018_V1","groupColumn","land_district","$","DataTable","columnDefs","orderable","className","targets","visible","select","style","selector","order","rowGroup","dataSrc","scrollY","scrollCollapse","paging","on","e","dt","type","indexes","subreg","rows","toArray","selected","selectedelement","toString","updateTripLayerData","SPINNER_EL","document","getElementById","TRANSPORTTYPE","VIZTYPE","TransportModes","schemaDeplacement","closeBasemapList","is","css","click","MAP","setStyle","off","hide","ready","multiselect","buttonContainer","buttonClass","templates","button","ul","onChange","element","checked","brands","each","index","brand","this","val","SAPOLYGON","change","selected_value","component","innerHTML","entries","htmlData","initAggregateLayers","CENTER_CITIES","centroides","SOURCE_MAPBOX_PERSO","SOURCE_OSM","SOURCE_LINZ","INITIAL_VIEW_STATE","tabColorBlueToPurple","chroma","scale","mapboxgl","accessToken","centroideLayer","TripLayer","Map","container","center","zoom","bearing","pitch","require","init","initDeckglLayers","layers","getStyle","id","MapboxLayer","GeoJsonLayer","filled","getRadius","radius","getFillColor","pickable","autoHighlight","onClick","info","alert","abbrev","addLayer","setProps","addSource","dataset","AggregateLayer","selectedIds","TypeOfTransport","tabColorToUse","getLayer","removeLayer","error","pcolors","darkMode","flows","scheme","d3scaleChromatic","reverse","locationAreas","normal","outlineColor","largerList","selected_Trips","EDUCTAIONNAL_TRIPS","includes","SA2_code_educational_address","SA2_code_usual_residence_address","selected_centers_cities","SA22018_V1_00","cleanedselected_Trips","MinMax","list","num","hex","parseInt","display","colorDic","minmax","tb","FlowMapLayer","locations","animate","showTotals","showOnlyTopFlows","colors","animationCurrentTime","maxFlowThickness","getFlowColor","flow","getFlowMagnitude","getFlowOriginId","getFlowDestId","getLocationId","loc","getLocationCentroid","location","geometry","coordinates","WORK_TRIPS","SA2_code_workplace_address","timestamp","Date","now","time","round","loopLength","requestAnimationFrame","attributeName","geojson","maxTest","isNaN","minTest","getMaxMin","values","sort","a","b","breaks","geostats","getClassJenks","visibility","console","log","Promise","all","resolve","axios","headers","method","url","responseType","then","response","JSZip","loadAsync","zip","file","async","JSON","parse","catch","unique","dataitems","find","OBJECTID","hoveredStateId","setFeatureState","source","hover","String","hexEncode","charCodeAt","bbox","point","x","y","queryRenderedFeatures","idSA2","eq","filter","rowIdx","cell","row","node","hasClass","deselect","attTypeFlow","attDirection","plocation","tableData","propertiesOnly","pProperties","keys","replace","svg","d3","append","attr","color","domain","range","data_ready","pie","arc","innerRadius","outerRadius","outerArc","selectAll","enter","posA","centroid","posB","posC","midangle","startAngle","endAngle","PI","size","text","fromCharCode","schemaDeplacementImg","img","pos","initMap","Set","map","item"],"mappings":"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","file":"js/app.858d2578.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([435,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export function getMaxMin(geojson, prop) {\r\n    var max = -10000000;\r\n    for (var i=0 ; i<geojson.length ; i++) {\r\n        //max = Math.max(parseFloat(geojson[i][\"properties\"][prop]), max);\r\n        var  maxTest =  Math.max(parseFloat(geojson[i][\"properties\"][prop]), max); \r\n        if(!isNaN(maxTest)){\r\n            max = maxTest;\r\n        }\r\n    }\r\n\r\n    var min = 10000000;\r\n    for (var i=0 ; i<geojson.length ; i++) {\r\n        var  minTest = Math.min(parseFloat(geojson[i][\"properties\"][prop]), min); \r\n        if(!isNaN(minTest)){\r\n            min = minTest;\r\n        }\r\n    }\r\n\r\n\r\n    return {min:min,max:max};\r\n}\r\n\r\n\r\n\r\nexport function getMaxMinTab(table, prop) {\r\n    var max = -10000000;\r\n    for (var i=0 ; i<table.length ; i++) {\r\n        max = Math.max(parseFloat(table[i][prop]), max);\r\n    }\r\n\r\n    var min = 10000000;\r\n    for (var i=0 ; i<table.length ; i++) {\r\n        if(parseFloat(table[i][prop] == -999)) {\r\n            continue;\r\n        }\r\n        min = Math.min(parseFloat(table[i][prop]), min);\r\n    }\r\n\r\n\r\n    return {min:min,max:max};\r\n}","\r\nimport {SAPOLYGON,EDUCTAIONNAL_TRIPS}from './index';\r\nimport {updateTripLayerData, initAggregateLayers}from './map';\r\n\r\n\r\nexport function land_district(AS2polygon){\r\n    const unique = [...new Set(AS2polygon.features.map(item => item.properties.land_district))];\r\n    var list = document.getElementById('region-checkbox-list');\r\n    //unique.forEach(element => list.innerHTML += '<a class=\"list-group-item list-group-item-action\">' + element + '</li>');\r\n    //unique.forEach(element => list.innerHTML += '<option value=\"' + element +  '\">' + element + '</option>');\r\n\r\n \r\n\r\n    var dataitems = [];\r\n    unique.forEach(element => dataitems.push({label: element, value: element}));\r\n\r\n    $(\"#region-checkbox-list\").multiselect('dataprovider', dataitems);\r\n\r\n\r\n\r\n}\r\n\r\nexport let SUBREGIONS;\r\n/// SelectedRegions as array of regions selected by the user\r\nexport function land_Subdistrict(AS2polygon ){\r\n    //list-subregion\r\n    // \"SA22018_V1\": \"100400\",\r\n    // \"SA22018__1\": \"Karikari Peninsula\",\r\n    // \"id\": 100400,\r\n \r\n    let selectedSubregions = [];\r\n    let selectedSubregionsTable = [];\r\n    // var tempSub = (AS2polygon.features.filter(item => item.properties.land_district == element)) ;\r\n    var tempSub = AS2polygon.features  ;\r\n    tempSub.forEach(elementsub=>{\r\n        selectedSubregions.push({\r\n            label: elementsub.properties.SA22018__1,\r\n            title: elementsub.properties.SA22018__1,\r\n            value:  elementsub.properties.SA22018_V1,\r\n            groupColumn: elementsub.properties.land_district\r\n        });\r\n        selectedSubregionsTable.push([\r\n            '',\r\n             elementsub.properties.SA22018__1,\r\n             elementsub.properties.SA22018_V1,\r\n             elementsub.properties.land_district\r\n        ]);\r\n    });\r\n\r\n    \r\n        // datatable element\r\n        let t = $('#tableregions').DataTable( \r\n            \r\n            {      \r\n                data: selectedSubregionsTable,\r\n                columnDefs: [ {\r\n                    orderable: false,\r\n                    className: 'select-checkbox',\r\n                    targets:   0\r\n                    },\r\n                    { visible: false, targets: 3 }\r\n                ],\r\n                select: {\r\n                    style:    'os',\r\n                    selector: 'td:first-child',\r\n                    style: 'multi'\r\n                },\r\n                order: [[ 3, 'asc' ]],\r\n                //order: [[ 1, 'asc' ]],\r\n                // displayLength: 25,\r\n                rowGroup: {\r\n                    dataSrc:3\r\n                },\r\n                scrollY:        \"400px\",\r\n                scrollCollapse: true,\r\n                paging:         false\r\n            }\r\n        );\r\n\r\n        // selectedSubregions.forEach(elementRow => {\r\n        //     t.row.add( [\r\n        //         '',\r\n        //         elementRow.label,\r\n        //         elementRow.value,\r\n        //         elementRow.groupColumn\r\n        //     ] ).draw( false );\r\n        // });\r\n\r\n\r\n        \r\n        t\r\n        .on( 'select', function ( e, dt, type, indexes ) {\r\n            var subreg = [];\r\n            var rowData = t.rows( indexes ).data().toArray();\r\n            t.rows( { selected: true } ).data().toArray().forEach(selectedelement => {\r\n                subreg.push( (selectedelement[2]).toString( ) );\r\n                \r\n            });\r\n            SUBREGIONS = subreg;\r\n            updateTripLayerData();\r\n            \r\n        } )\r\n        .on( 'deselect', function ( e, dt, type, indexes ) {\r\n            var subreg = [];\r\n            var rowData = t.rows( indexes ).data().toArray();\r\n            t.rows( { selected: true } ).data().toArray().forEach(selectedelement => {\r\n                subreg.push( (selectedelement[2]).toString( ) );\r\n            });\r\n            SUBREGIONS = subreg;\r\n            updateTripLayerData();\r\n  \r\n        } );\r\n        \r\n\r\n}\r\n","import {MAP,BASEMAPS_COURCES} from './map';\r\nimport {land_Subdistrict} from './regions';\r\nimport {SAPOLYGON}from './index';\r\nimport schemaDeplacement from '../data/schemaDeplacement.json';\r\nimport {updateTripLayerData,initAggregateLayers,AggregateLayer,firstSymbolId}from './map';\r\n\r\n\r\nexport const SPINNER_EL = document.getElementById('loader');\r\n\r\nexport function stopSpinner(){\r\n    SPINNER_EL.style.visibility = \"hidden\";\r\n}\r\nexport function startSpinner(){\r\n    SPINNER_EL.style.visibility = \"visible\";\r\n}\r\n\r\nexport const TransportModes = schemaDeplacement;\r\nexport let TRANSPORTTYPE ;\r\n\r\nexport let VIZTYPE ; \r\n\r\n/* BaseMaps -------------------*/\r\n\r\nfunction closeBasemapList() {\r\n\tif($(\"#BasemapsList\").is(':visible')){\r\n\t\t$( \"#BasemapsList\" ).css('display', 'none'); //hidden\r\n\t\t$( \"#BasemapsList\" ).css('visibility', 'hidden'); //hidden\r\n\t}else{\r\n\t\t$( \"#BasemapsList\" ).css('display', 'flex'); //hidden\r\n\t\t$( \"#BasemapsList\" ).css('visibility', 'visible'); //hidden\r\n\t}\r\n};\r\n\r\n$( \"#menuItemBasemapsManager\" ).click(function() {\r\n\tcloseBasemapList();\r\n});\r\n$('.basemapsbtns').on('click', function () {\r\n\tcloseBasemapList();\r\n});\r\n\r\n\r\n\r\nfunction getlastLayerID(){\r\n    var layers = MAP.getStyle().layers;\r\n    // Find the index of the first symbol layer in the map style\r\n    var firstSymbolId;\r\n    for (var i = 0; i < layers.length; i++) {\r\n        if (layers[i].id === \"background\") {\r\n            firstSymbolId = i;\r\n            break;\r\n        }\r\n    }\r\n    return firstSymbolId +1;\r\n}\r\n\r\n//\r\n$( \"#BMSatellite\" ).click(function() {\r\n    //MapBoxBasemap\r\n    MAP.setStyle('mapbox://styles/mapbox/satellite-v9');\r\n    \r\n});\r\n$( \"#BMLight\" ).click(function() {\r\n    MAP.setStyle('mapbox://styles/mapbox/light-v10');\r\n});\r\n$( \"#BMDark\" ).click(function() {\r\n    MAP.setStyle('mapbox://styles/mapbox/dark-v10');\r\n});\r\n$( \"#BMStreet\" ).click(function() {\r\n    MAP.setStyle('mapbox://styles/mapbox/streets-v11');\r\n});\r\n$( \"#BMOutdoors\" ).click(function() {\r\n    MAP.setStyle('mapbox://styles/mapbox/outdoors-v11');\r\n});\r\n\r\n//--Not modal\r\n$( \"#menuItemARselector\" ).click(function() {\r\n \r\n});\r\n$(\"#ARselector\").on('shown.bs.modal',function(){\r\n    $(document).off('focusin.bs.modal');\r\n    $(\".modal-backdrop\").hide();\r\n});\r\n// Aggregateselector\r\n$(\"#Aggregateselector\").on('shown.bs.modal',function(){\r\n    $(document).off('focusin.bs.modal');\r\n    $(\".modal-backdrop\").hide();\r\n});\r\n\r\n\r\n\r\n$(document).ready(function() {\r\n    $('#region-checkbox-list').multiselect({\r\n        buttonContainer: '<div id=\"region-checkbox-list-container\"></div>',\r\n        buttonClass: '',\r\n        templates: {\r\n            button: '',\r\n            ul: '<ul class=\"multiselect-container checkbox-list\"></ul>',\r\n        },\r\n        onChange: function(element, checked) {\r\n            var brands = $('#region-checkbox-list option:selected');\r\n            var subreg = [];\r\n            $(brands).each(function(index, brand){\r\n                // alert([$(this).val()]);\r\n                // get the selected sub regions \r\n                subreg.push( $(this).val() );\r\n            });\r\n\r\n            land_Subdistrict(SAPOLYGON,subreg);\r\n\r\n        }\r\n    });\r\n\r\n\r\n    // Radio button Work / eductaion \r\n    $('input[name=\"TypeFlowRadio\"]').change(function(){\r\n        let selected_value = $('input[name=\"TypeFlowRadio\"]:checked').val();\r\n        var component = document.getElementById('DivTransportMode');\r\n        component.innerHTML = '';\r\n\r\n        if (selected_value == \"Educationnal\") {\r\n            for (const [key, value] of Object.entries(TransportModes[\"education\"])) {\r\n                var htmlData =\r\n                `<div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"transportType\" id=\"${key}\" value=\"${key}\">\r\n                    <label class=\"form-check-label\" for=\"${key}\">\r\n                    ${value}\r\n                    </label>\r\n                </div> `;\r\n                component.innerHTML += htmlData;\r\n            }\r\n        }else{\r\n            for (const [key, value] of Object.entries(TransportModes[\"work\"])) {\r\n                var htmlData =\r\n                `<div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"transportType\" id=\"${key}\" value=\"${key}\">\r\n                    <label class=\"form-check-label\" for=\"${key}\">\r\n                    ${value}\r\n                    </label>\r\n                </div> `;\r\n                component.innerHTML += htmlData;\r\n            }\r\n        }\r\n        // total by default\r\n        TRANSPORTTYPE = \"Total\";\r\n        $('#Total').prop('checked',true);\r\n\r\n        // change the flow dataviz\r\n        updateTripLayerData();\r\n        initAggregateLayers();\r\n        \r\n        $('input[name=\"transportType\"]').change(function(){\r\n            let selected_value = $('input[name=\"transportType\"]:checked').val();\r\n            TRANSPORTTYPE = selected_value;\r\n            // change the flow dataviz\r\n            updateTripLayerData();\r\n            initAggregateLayers();\r\n        });\r\n\r\n    });\r\n\r\n\r\n    // change programmaticly Educationnal - initialisation\r\n    $('input[name=\"TypeFlowRadio\"]').val = 'Educationnal';\r\n    var component = document.getElementById('DivTransportMode');\r\n    component.innerHTML = '';\r\n    for (const [key, value] of Object.entries(TransportModes[\"education\"])) {\r\n        var htmlData =\r\n        `<div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"radio\" name=\"transportType\" id=\"${key}\" value=\"${key}\">\r\n            <label class=\"form-check-label\" for=\"${key}\">\r\n            ${value}\r\n            </label>\r\n        </div> `;\r\n        component.innerHTML += htmlData;\r\n    }\r\n    TRANSPORTTYPE = \"Total\";\r\n    $('#Total').prop('checked',true);\r\n    initAggregateLayers();\r\n\r\n    $('input[name=\"transportType\"]').change(function(){\r\n        let selected_value = $('input[name=\"transportType\"]:checked').val();\r\n        TRANSPORTTYPE = selected_value;\r\n        // change the flow dataviz\r\n        updateTripLayerData();\r\n        initAggregateLayers();\r\n    });\r\n\r\n\r\n\r\n    // initialise the first view \r\n    $('input[name=\"VizType\"]').change(function(){\r\n        let selected_value = $('input[name=\"VizType\"]:checked').val();\r\n        VIZTYPE = selected_value;\r\n        // change the flow dataviz\r\n        updateTripLayerData();\r\n        \r\n    });\r\n    // default values \r\n    VIZTYPE = 'VizAnimation';\r\n\r\n\r\n    // DirectionRadio\r\n    $('input[name=\"DirectionRadio\"]').change(function(){\r\n\r\n        // change the flow dataviz\r\n        initAggregateLayers();\r\n        \r\n    });\r\n\r\n\r\n\r\n    $('#CheckFlowActivated').change(function(){\r\n        if($('#CheckFlowActivated').is(\":checked\")){\r\n            $( \"#CheckAggregatedActivated\" ).prop( \"checked\", false );\r\n        }\r\n        initAggregateLayers();\r\n        updateTripLayerData();\r\n    });\r\n\r\n    $('#CheckAggregatedActivated').change(function(){\r\n        if($('#CheckAggregatedActivated').is(\":checked\")){\r\n            $( \"#CheckFlowActivated\" ).prop( \"checked\", false );\r\n        }\r\n        initAggregateLayers();\r\n        updateTripLayerData();\r\n    });\r\n    \r\n\r\n});\r\n","import mapboxgl from 'mapbox-gl';\r\nimport {\r\n    Deck\r\n} from '@deck.gl/core';\r\nimport {\r\n    GeoJsonLayer,\r\n    ArcLayer\r\n} from '@deck.gl/layers';\r\nimport {\r\n    MapboxLayer\r\n} from '@deck.gl/mapbox';\r\nimport FlowMapLayer from '@flowmap.gl/core';\r\nimport {\r\n    TripsLayer\r\n} from '@deck.gl/geo-layers';\r\n\r\nimport chroma from \"chroma-js\";\r\nimport * as d3 from \"d3\";\r\nimport * as geostats from \"geostats\";\r\n\r\nexport const MAPBOXKEY = 'pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA';\r\nexport const MAPBOXSTYLEBLUE = 'mapbox://styles/antonin64/cj6yh5j1qazk52ro1axmm3a6w';\r\nexport const MAPBOXSTYLEDARKDEFAULT = 'mapbox://styles/mapbox/dark-v9';\r\nexport const MAPBOXSTYLELIGHTDEFAULT = 'mapbox://styles/mapbox/light-v9';\r\nimport centroides from '../data/sa2centroides.json';\r\nimport schemaDeplacementImg from '../data/schemaDeplacementImage.json';\r\n\r\nimport {\r\n    getMaxMin, getMaxMinTab\r\n} from './helper';\r\nimport {\r\n    SAPOLYGON,\r\n    EDUCTAIONNAL_TRIPS,\r\n    WORK_TRIPS\r\n} from './index';\r\nimport * as d3scaleChromatic from 'd3-scale-chromatic';\r\n\r\nimport {SUBREGIONS} from './regions';\r\nimport {TRANSPORTTYPE,VIZTYPE,TransportModes} from './ui';\r\n\r\n\r\n\r\nconst CENTER_CITIES = centroides;\r\n// const {MapboxLayer, GeoJsonLayer} = deck;\r\nexport const CURRENTBASEMAP = {\r\n    'id': 'MapBoxBasemap',\r\n    'type': 'raster',\r\n    'source': {\r\n        'type': 'raster',\r\n        'tiles': ['https://api.mapbox.com/styles/v1/antonin64/cj6yh5j1qazk52ro1axmm3a6w/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA'],\r\n        'tileSize': 256\r\n    },\r\n    'paint': {}\r\n};\r\nexport const SOURCE_MAPBOX_PERSO = {\r\n    'type': 'raster',\r\n    'tiles': ['https://api.mapbox.com/styles/v1/antonin64/cj6yh5j1qazk52ro1axmm3a6w/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA'],\r\n    'tileSize': 256\r\n};\r\nexport const SOURCE_MAPBOX_LIGHT = {\r\n    'type': 'raster',\r\n    'tiles': ['https://api.mapbox.com/styles/v1/mapbox/light-v10/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA'],\r\n    'tileSize': 256\r\n};\r\nexport const SOURCE_MAPBOX_DARK = {\r\n    'type': 'raster',\r\n    'tiles': ['https://api.mapbox.com/styles/v1/mapbox/dark-v10/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA'],\r\n    'tileSize': 256\r\n};\r\nexport const SOURCE_OSM = {\r\n    'type': 'raster',\r\n    'tiles': ['https://b.tile.osm.org/{z}/{x}/{y}.png'],\r\n    'tileSize': 256\r\n};\r\nexport const SOURCE_LINZ = {\r\n    'type': 'raster',\r\n    'tiles': ['http://tiles-a.data-cdn.linz.govt.nz/services;key=f11577986e92458baa1bc5497c3c0d41/tiles/v4/set=4702/EPSG:3857/{z}/{x}/{y}.png'],\r\n    'tileSize': 256\r\n};\r\nexport let SYMBOL_LABEL_ID = '0';\r\nexport const INITIAL_VIEW_STATE = {\r\n    latitude: -43.53333,\r\n    longitude: 172.63333,\r\n    zoom: 3,\r\n    bearing: 30,\r\n    pitch: 30\r\n};\r\n\r\n\r\nconst tabColorYellowToRed = ['#ffff40', '#fffd3f', '#fffb3d', '#fff93b', '#fff73a', '#fff538', '#fff337', '#fff135', '#ffef34', '#ffed32', '#ffeb31', '#ffe930', '#ffe72e', '#ffe52d', '#ffe22c', '#ffe02a', '#ffde29', '#ffdc28', '#ffda27', '#fed826', '#fed624', '#fed423', '#fed222', '#fed021', '#fdce20', '#fdcc1f', '#fdca1e', '#fdc81d', '#fdc61c', '#fcc41a', '#fcc219', '#fcc018', '#fbbe17', '#fbbc16', '#fbba15', '#fbb814', '#fab613', '#fab412', '#fab211', '#f9af10', '#f9ad0f', '#f8ab0e', '#f8a90d', '#f8a70c', '#f7a50b', '#f7a30a', '#f7a109', '#f69f08', '#f69d08', '#f59b07', '#f59906', '#f49705', '#f49405', '#f49204', '#f39003', '#f38e03', '#f28c02', '#f28a02', '#f18801', '#f18501', '#f08300', '#f08100', '#ef7f00', '#ef7d00', '#ee7a00', '#ee7800', '#ed7600', '#ec7400', '#ec7100', '#eb6f00', '#eb6d00', '#ea6b00', '#ea6800', '#e96600', '#e96300', '#e86100', '#e75e00', '#e75c00', '#e65900', '#e55700', '#e55400', '#e45200', '#e44f00', '#e34c00', '#e24900', '#e24700', '#e14400', '#e04000', '#e03d00', '#df3a00', '#de3600', '#de3300', '#dd2f00', '#dc2b00', '#dc2700', '#db2200', '#da1c00', '#d91500', '#d90c00', '#d80000'];\r\n \r\nconst tabColorBlueToPurple = chroma.scale(['49b6ff', '779be7', 'a480cf', 'd264b6', 'ff499e', 'ef476f']);\r\n\r\n\r\n// Set your mapbox token here\r\nmapboxgl.accessToken = MAPBOXKEY; // eslint-disable-line\r\nconst emptyStyle = {\r\n    \"version\": 8,\r\n    \"name\": \"Empty\",\r\n    \"sources\": {},\r\n    \"layers\": [{\r\n        \"id\": \"background\",\r\n        \"type\": \"background\",\r\n        \"paint\": {\r\n            //\"background-color\": \"hsl(47, 26%, 88%)\"\r\n        }\r\n    }],\r\n    \"id\": \"empty\"\r\n};\r\nexport let MAP = new mapboxgl.Map({\r\n    container: 'map',\r\n    style: 'mapbox://styles/mapbox/dark-v10', // emptyStyle,\r\n    center: [INITIAL_VIEW_STATE.longitude, INITIAL_VIEW_STATE.latitude],\r\n    zoom: INITIAL_VIEW_STATE.zoom,\r\n    bearing: INITIAL_VIEW_STATE.bearing,\r\n    pitch: INITIAL_VIEW_STATE.pitch\r\n});\r\nexport const U = require('mapbox-gl-utils').init(MAP);\r\nexport function initMap() {\r\n    MAP.on('load', function() {\r\n        // MAP.addLayer(CURRENTBASEMAP);\r\n        MAP.addSource('SOURCE_LINZ', SOURCE_LINZ);\r\n        MAP.addSource('SOURCE_OSM', SOURCE_OSM);\r\n        MAP.addSource('SOURCE_MAPBOX_PERSO', SOURCE_MAPBOX_PERSO);\r\n        // MAP.addSource('SOURCE_MAPBOX_LIGHT', SOURCE_MAPBOX_LIGHT);\r\n        // MAP.addControl(new mapboxgl.AttributionControl(), 'top-right');\r\n        // symbol id\r\n        var layers = MAP.getStyle().layers;\r\n        // Find the index of the first symbol layer in the map style\r\n        for (var i = 0; i < layers.length; i++) {\r\n            if (layers[i].type === 'symbol') {\r\n                SYMBOL_LABEL_ID = layers[i].id;\r\n                break;\r\n            }\r\n        }\r\n    });\r\n\r\n    MAP.on('style.load', function () {\r\n        // MAP.addLayer(CURRENTBASEMAP);\r\n        MAP.addSource('SOURCE_LINZ', SOURCE_LINZ);\r\n        MAP.addSource('SOURCE_OSM', SOURCE_OSM);\r\n        MAP.addSource('SOURCE_MAPBOX_PERSO', SOURCE_MAPBOX_PERSO);\r\n        // MAP.addSource('SOURCE_MAPBOX_LIGHT', SOURCE_MAPBOX_LIGHT);\r\n        // MAP.addControl(new mapboxgl.AttributionControl(), 'top-right');\r\n        // symbol id\r\n        var layers = MAP.getStyle().layers;\r\n        // Find the index of the first symbol layer in the map style\r\n        for (var i = 0; i < layers.length; i++) {\r\n            if (layers[i].type === 'symbol') {\r\n                SYMBOL_LABEL_ID = layers[i].id;\r\n                break;\r\n            }\r\n        }\r\n        initDeckglLayers();\r\n    });\r\n    // // MAP.on('mousemove', ({point}) => {\r\n    // //   if (polygonSA2Layer) {\r\n    // //     polygonSA2Layer.setProps({mousePosition: [point.x, point.y]});\r\n    // //   }\r\n    // // });\r\n    // // When the user moves their mouse over the state-fill layer, we'll update the\r\n    // // feature state for the feature under the mouse.\r\n    MAP.on('mousemove', 'sa2OverFills', function(e) {\r\n        if (e.features.length > 0) {\r\n            if (hoveredStateId) {\r\n                MAP.setFeatureState({\r\n                    source: 'sa2OverSource',\r\n                    id: hoveredStateId\r\n                }, {\r\n                    hover: false\r\n                });\r\n            }\r\n            hoveredStateId = e.features[0].id;\r\n            MAP.setFeatureState({\r\n                source: 'sa2OverSource',\r\n                id: hoveredStateId\r\n            }, {\r\n                hover: true\r\n            });\r\n        }\r\n    });\r\n    var hoveredStateId = null;\r\n\r\n\r\n    // When the mouse leaves the state-fill layer, update the feature state of the\r\n    // previously hovered feature.\r\n    MAP.on('mouseleave', 'sa2OverFills', function() {\r\n        if (hoveredStateId) {\r\n            MAP.setFeatureState({\r\n                source: 'sa2OverSource',\r\n                id: hoveredStateId\r\n            }, {\r\n                hover: false\r\n            });\r\n        }\r\n        hoveredStateId = null;\r\n    });\r\n    // MAP.on('mousemove', function() {\r\n    //     // sizecentroides =   MAP.getZoom();\r\n    //     // renderLayer(sizecentroides,null);\r\n    // });\r\n    MAP.on('zoom', function() {\r\n        // sizecentroides =   MAP.getZoom();\r\n        // renderLayer(sizecentroides,null);\r\n    });\r\n\r\n    String.prototype.hexEncode = function(){\r\n        var hex, i;\r\n    \r\n        var result = \"\";\r\n        for (i=0; i<this.length; i++) {\r\n            hex = this.charCodeAt(i).toString(16);\r\n            result += (\"000\"+hex).slice(-4);\r\n        }\r\n    \r\n        return result;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // MAP.on('mousemove', 'trips', function(e) {\r\n    //     if($('#CheckFlowActivated').is(\":checked\")){\r\n    //         // Change the cursor style as a UI indicator.\r\n    //         MAP.getCanvas().style.cursor = 'pointer';\r\n            \r\n    //         var coordinates = e.features[0].geometry.coordinates.slice();\r\n    //         var description = e.features[0].properties.description;\r\n            \r\n    //         // Ensure that if the MAP is zoomed out such that multiple\r\n    //         // copies of the feature are visible, the popup appears\r\n    //         // over the copy being pointed to.\r\n    //         while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n    //             coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n    //         }\r\n            \r\n    //         // Populate the popup and set its coordinates\r\n    //         // based on the feature found.\r\n    //         popup\r\n    //         .setLngLat(coordinates)\r\n    //         .setHTML(description)\r\n    //         .addTo(MAP);\r\n    //     }\r\n    // });\r\n         \r\n    // MAP.on('mouseleave', 'trips', function() {\r\n    //     if($('#CheckFlowActivated').is(\":checked\")){\r\n    //         MAP.getCanvas().style.cursor = '';\r\n    //     popup.remove();\r\n    //     }\r\n    // });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    MAP.on('click', function(e) {\r\n\r\n        if(!$('#CheckFlowActivated').is(\":checked\")){\r\n            // Aggregate view\r\n            var bbox = [\r\n                [e.point.x - 2, e.point.y - 2],\r\n                [e.point.x + 2, e.point.y + 2]\r\n            ];\r\n            var features = MAP.queryRenderedFeatures(bbox, {\r\n                layers: ['AggregateLayer']\r\n            });\r\n    \r\n\r\n\r\n            let attTypeFlow = '';\r\n            if ($('input[name=\"TypeFlowRadio\"]:checked').val() == \"Educationnal\") {\r\n                attTypeFlow = \"edu_\";\r\n            }else{\r\n                attTypeFlow = \"work_\";\r\n            }\r\n        \r\n            let attDirection = '';\r\n            if ($('input[name=\"DirectionRadio\"]:checked').val() == \"Origin\") {\r\n                // mode origin \r\n                attDirection =  '_origin';\r\n            }else{\r\n                // mode destination\r\n                attDirection =  '_dest';\r\n            }\r\n            var plocation ='';\r\n            var tableData = {};\r\n            var propertiesOnly = [];\r\n            if(features!= null){\r\n                if(features.length>0){\r\n                    var pProperties = features[0].properties;\r\n                    plocation = features[0].properties.SA22018__1;\r\n                    Object.keys(pProperties).forEach(function(key,index) {\r\n                        if(key.includes(attTypeFlow) &&\r\n                        key.includes(attDirection) &&  !key.includes(\"Total\")){\r\n\r\n                            if(typeof pProperties[key] == 'number'){\r\n                                if(pProperties[key]>0){\r\n                                    tableData[key.replace(attTypeFlow,\"\").replace(attDirection,\"\")] = pProperties[key];\r\n                                    propertiesOnly.push(key.replace(attTypeFlow,\"\").replace(attDirection,\"\"));\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n            let location =  document.getElementById('location');\r\n            location.innerHTML = plocation; \r\n\r\n            let pchart = document.getElementById('chart');\r\n            pchart.innerHTML = ''; // empty\r\n\r\n\r\n\r\n            // create the chart and display\r\n            // set the dimensions and margins of the graph\r\n            var width = 400;\r\n            var height = 400;\r\n            var margin = 50;\r\n\r\n            // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\r\n            var radius = Math.min(width, height) / 2 - margin;\r\n\r\n            // append the svg object to the div called 'my_dataviz'\r\n            var svg = d3.select(\"#chart\")\r\n            .append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height)\r\n            .append(\"g\")\r\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n\r\n            // Create dummy data\r\n            var data =tableData ; // {a: 9, b: 20, c:30, d:8, e:12, f:3, g:7, h:14};\r\n\r\n            // set the color scale\r\n            var color = d3.scaleOrdinal()\r\n            .domain(propertiesOnly) // .domain([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"])\r\n            .range(d3.schemeAccent);\r\n\r\n            // Compute the position of each group on the pie:\r\n            var pie = d3.pie()\r\n            .sort(null) // Do not sort group by size\r\n            .value(function(d) {return d.value; });\r\n            var data_ready = pie(d3.entries(data));\r\n\r\n            // The arc generator\r\n            var arc = d3.arc()\r\n            .innerRadius(radius * 0.5)         // This is the size of the donut hole\r\n            .outerRadius(radius * 0.8);\r\n\r\n            // Another arc that won't be drawn. Just for labels positioning\r\n            var outerArc = d3.arc()\r\n            .innerRadius(radius * 0.9)\r\n            .outerRadius(radius * 0.9);\r\n\r\n            // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\r\n            svg\r\n            .selectAll('allSlices')\r\n            .data(data_ready)\r\n            .enter()\r\n            .append('path')\r\n            .attr('d', arc)\r\n            .attr('fill', function(d){ return(color(d.data.key)); })\r\n            .attr(\"stroke\", \"white\")\r\n            .style(\"stroke-width\", \"2px\")\r\n            .style(\"opacity\", 0.7);\r\n\r\n            // Add the polylines between chart and labels:\r\n            svg\r\n            .selectAll('allPolylines')\r\n            .data(data_ready)\r\n            .enter()\r\n            .append('polyline')\r\n            .attr(\"stroke\", \"black\")\r\n            .style(\"fill\", \"none\")\r\n            .attr(\"stroke-width\", 1)\r\n            .attr('points', function(d) {\r\n            var posA = arc.centroid(d); // line insertion in the slice\r\n            var posB = outerArc.centroid(d); // line break: we use the other arc generator that has been built only for that\r\n            var posC = outerArc.centroid(d); // Label position = almost the same as posB\r\n            var midangle = d.startAngle + (d.endAngle - d.startAngle) / 2; // we need the angle to see if the X position will be at the extreme right or extreme left\r\n            posC[0] = radius * 0.95 * (midangle < Math.PI ? 1 : -1); // multiply by 1 or -1 to put it on the right or on the left\r\n            return [posA, posB, posC];\r\n            });\r\n\r\n            // Add the polylines between chart and labels:  schemaDeplacementImg\r\n            svg\r\n            .selectAll('allLabels')\r\n            .data(data_ready)\r\n            .enter()\r\n            .append('text')\r\n            // .text( function(d) { console.log(d.data.key) ; return d.data.key; } )\r\n            .attr(\"class\", \"fa\")\r\n            .attr('font-size', function(d) { return d.size*2 +'em';} )\r\n            .text(function(d) { return   `${String.fromCharCode('0x' + schemaDeplacementImg.img [d.data.key])}:${d.data.value}`  ;}) // '\\uf118'\r\n  \r\n            .attr('transform', function(d) {\r\n                var pos = outerArc.centroid(d);\r\n                var midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n                pos[0] = radius * 0.99 * (midangle < Math.PI ? 1 : -1);\r\n                return 'translate(' + pos + ')';\r\n            })\r\n            .style('text-anchor', function(d) {\r\n                var midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n                return (midangle < Math.PI ? 'start' : 'end');\r\n            });\r\n\r\n\r\n\r\n            // setup the legend legendchart\r\n            // let plegend =  document.getElementById('legendchart');\r\n            // plegend.innerHTML = \"\"; \r\n\r\n            \r\n\r\n            // Object.keys(schemaDeplacementImg.img).forEach(function(key,index) {\r\n            //     plegend.innerHTML += ` <div class=\"row\">\r\n            //                             <i class=\"fa\">\r\n            //                             &#x${index};\r\n            //                             </i>\r\n            //                         </div>`;\r\n            // });\r\n\r\n\r\n\r\n\r\n        }else{\r\n            // Trip view\r\n        // set bbox as 5px reactangle area around clicked point\r\n            var bbox = [\r\n                [e.point.x - 2, e.point.y - 2],\r\n                [e.point.x + 2, e.point.y + 2]\r\n            ];\r\n            var features = MAP.queryRenderedFeatures(bbox, {\r\n                layers: ['sa2OverFills']\r\n            });\r\n    \r\n            if(features!= null){\r\n                if(features.length>0){\r\n                    var idSA2 = features[0].properties.SA22018_V1;\r\n                    // select the id in the SA2 table \r\n                    var table = $('#tableregions').DataTable();\r\n                    //table.search( idSA2 ).draw();\r\n                    //table.search( idSA2 ).select();\r\n    \r\n                    var indexes = table.rows().eq( 0 ).filter( function (rowIdx) {\r\n                        return table.cell( rowIdx, 2 ).data() === idSA2 ? true : false;\r\n                    } );\r\n                    var row = table.row(indexes);\r\n     \r\n                    var found= false;\r\n    \r\n                    var $tr = $(row.node());\r\n    \r\n    \r\n                    if ( $tr.hasClass('selected') ) {\r\n                        //$tr.removeClass('selected');\r\n                        table.rows(indexes).deselect();\r\n                    }else{\r\n                        table.rows(indexes).select();\r\n                    }\r\n    \r\n    \r\n    \r\n                    \r\n                }\r\n            }\r\n            // get the id of the feature\r\n    \r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n}\r\nexport let centroideLayer;\r\nexport let polygonSA2Layer;\r\nexport let  firstSymbolId;\r\nexport function initDeckglLayers() {\r\n\r\n\r\n    var layers = MAP.getStyle().layers;\r\n    for (var i = 0; i < layers.length; i++) {\r\n        if (layers[i].type === 'symbol') {\r\n            firstSymbolId = layers[i].id;\r\n            break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Addin the deckgl layers\r\n    centroideLayer = new MapboxLayer({\r\n        type: GeoJsonLayer,\r\n        id: 'centroides',\r\n        data: [],\r\n        // Styles\r\n        filled: true,\r\n        getRadius: 50, //(1/psizecentroides)*2000,\r\n        radius: 10,\r\n        getFillColor: [178, 245, 86, 180],\r\n        pickable: true,\r\n        autoHighlight: true,\r\n        onClick: info =>\r\n            info.object && alert(`${info.object.properties.name} (${info.object.properties.abbrev})`)\r\n    });\r\n    var idstart =MAP.addLayer(centroideLayer);\r\n    centroideLayer.setProps({\r\n        [\"data\"]: CENTER_CITIES\r\n    });\r\n    MAP.addSource('sa2OverSource', {\r\n        'type': 'geojson',\r\n        'data': SAPOLYGON\r\n    });\r\n    polygonSA2Layer = MAP.addLayer({\r\n        'id': 'sa2OverFills',\r\n        'type': 'fill',\r\n        'source': 'sa2OverSource',\r\n        'layout': {},\r\n        'paint': {\r\n            'fill-color': '#ffffff',\r\n            'fill-opacity': [\r\n                'case',\r\n                ['boolean', ['feature-state', 'hover'], false],\r\n                0.3,\r\n                0.0\r\n            ]\r\n        }\r\n    });\r\n    MAP.addLayer({\r\n        'id': 'sa2OverLines',\r\n        'type': 'line',\r\n        'source': 'sa2OverSource',\r\n        'layout': {},\r\n        'paint': {\r\n            'line-color': '#000000',\r\n            'line-width': 1\r\n        }\r\n    });\r\n    \r\n    // Aggregate test for\r\n\r\n    var dataset = SAPOLYGON;\r\n\r\n\r\n    MAP.addSource('sa2polygonsSource', {\r\n        'type': 'geojson',\r\n        'data': dataset\r\n    });\r\n\r\n};\r\nexport let TripLayer;\r\nfunction animate() {\r\n    var loopLength = 18000; // unit corresponds to the timestamp in source data\r\n    var animationSpeed = 30; // unit time per second\r\n    const timestamp = Date.now() / 1000;\r\n    const loopTime = loopLength / animationSpeed;\r\n    var time = Math.round(((timestamp % loopTime) / loopTime) * loopLength);\r\n    // WHAT SHOULD I DO NOW???\r\n    if (TripLayer) {\r\n        TripLayer.setProps({\r\n            [\"animationCurrentTime\"]: time\r\n        });\r\n    }\r\n    window.requestAnimationFrame(animate.bind(this));\r\n}\r\nexport const MIN_ZOOM_LEVEL = 0;\r\nexport const MAX_ZOOM_LEVEL = 20;\r\n// This function will update the layer trips providing a lists of ids to display\r\nexport function updateTripLayerData() {\r\n    \r\n    let selectedIds = SUBREGIONS ; \r\n    let TypeOfTransport = TRANSPORTTYPE; \r\n    let tabColorToUse  = tabColorBlueToPurple;\r\n    const sizeTrip = 8;\r\n\r\n\r\n    if(!selectedIds) return;\r\n\r\n    // delete previously selected\r\n    if (TripLayer!= null && TripLayer) {\r\n\r\n        if(typeof TripLayer !== 'undefined') {\r\n            // Remove map layer & source.\r\n            try {\r\n                if (MAP.getLayer(\"trips\")) {\r\n                    MAP.removeLayer('trips');\r\n                }\r\n                \r\n            } catch (error) {\r\n                \r\n            }\r\n            \r\n        }\r\n    }\r\n \r\n    // Is it to be displayed? \r\n    if(!$('#CheckFlowActivated').is(\":checked\")){\r\n        return;\r\n    }\r\n\r\n\r\n    const scheme = (d3scaleChromatic.schemeOrRd[d3scaleChromatic.schemeOrRd.length - 1])\r\n    .slice()\r\n    .reverse();\r\n    const pcolors = {\r\n        darkMode: true,\r\n        flows: {\r\n            scheme,\r\n        },\r\n        locationAreas: {\r\n            normal: '#334',\r\n        },\r\n        outlineColor: '#000',\r\n    };\r\n\r\n\r\n\r\n    // limiting tripsJson\r\n    // SA2_code_educational_address: 100100\r\n    // SA2_code_usual_residence_address: 100100\r\n    // SA2_name_educational_address: \"North Cape\"\r\n    // SA2_name_usual_residence_address: \"North Cape\"\r\n    // Are we in eduction mode ?\r\n    if ($('input[name=\"TypeFlowRadio\"]:checked').val() == \"Educationnal\") {\r\n        let largerList = [];\r\n        let selected_Trips = [];\r\n        EDUCTAIONNAL_TRIPS.forEach(element => {\r\n            if (selectedIds.includes(element.SA2_code_educational_address.toString()) || selectedIds.includes(element.SA2_code_usual_residence_address.toString())) {\r\n                // add the element\r\n                selected_Trips.push(element);\r\n                if (!largerList.includes(element.SA2_code_educational_address.toString())) {\r\n                    largerList.push(element.SA2_code_educational_address.toString());\r\n                }\r\n                if (!largerList.includes(element.SA2_code_usual_residence_address.toString())) {\r\n                    largerList.push(element.SA2_code_usual_residence_address.toString());\r\n                }\r\n            }\r\n        });\r\n        // only display the selected flows  selectedIds\r\n        // CENTER_CITIES\r\n        // const unique = [...new Set(AS2polygon.features.map(item => item.properties.land_district))];\r\n        // property SA22018_V1_00: \"105300\"\r\n        let selected_centers_cities = {\r\n            type: \"FeatureCollection\",\r\n            features: []\r\n        };\r\n        CENTER_CITIES.features.forEach(element => {\r\n            if (largerList.includes(element.properties.SA22018_V1_00)) {\r\n                // add the element\r\n                selected_centers_cities.features.push(element);\r\n            }\r\n        });\r\n\r\n        var cleanedselected_Trips = selected_Trips;\r\n        var i = cleanedselected_Trips.length;\r\n        while (i--) {\r\n            if (cleanedselected_Trips[i][TypeOfTransport] == -999) { \r\n                cleanedselected_Trips.splice(i, 1);\r\n            } \r\n        }\r\n\r\n\r\n        // get the max \r\n        let MinMax = getMaxMinTab(cleanedselected_Trips,TypeOfTransport);\r\n\r\n        // change legend\r\n        let list = document.getElementById('trip-legend');\r\n        list.innerHTML = ''; // empty\r\n        for(i = 0 ; i <= 10 ; i=i+2){\r\n            let num =( MinMax.max * i )/10;\r\n            list.innerHTML += `<div><span style=\"background-color: ${tabColorToUse(i/10).hex()}\"></span>${parseInt(num)} trip</div>`;\r\n        }\r\n        list.style.display = 'block';\r\n\r\n        // do the minmax by SA2_code_usual_residence_address\r\n        var colorDic = {}; \r\n        cleanedselected_Trips.forEach(element => {\r\n            if(!(element.SA2_code_usual_residence_address in colorDic)){\r\n                colorDic[element.SA2_code_usual_residence_address] = {minmax:null, tb:[]};              \r\n            }\r\n            colorDic[element.SA2_code_usual_residence_address].tb.push(element);\r\n        });\r\n\r\n\r\n        // Annimation mode \r\n        if(VIZTYPE == 'VizAnimation'){\r\n            TripLayer = new MapboxLayer({\r\n                type: FlowMapLayer,\r\n                id: 'trips',\r\n                locations: selected_centers_cities, //   CENTER_CITIES,\r\n                flows: selected_Trips, // tripsJson,\r\n                animate: 'animated',\r\n                // getAnimatedFlowLineStaggering: (d) =>new alea(`${d.origin}-${d.dest}`)(),\r\n                showTotals: true,\r\n                visible: true,\r\n                showOnlyTopFlows: 500,\r\n                //highlightedFlow:'flow',\r\n                colors: pcolors, // https://github.com/etra0/flowmap.gl/blob/master/examples/src/stories/basic.tsx\r\n                animationCurrentTime: 100,\r\n                maxFlowThickness:sizeTrip,\r\n                getFlowColor:(flow) => {   \r\n                    if(flow[TypeOfTransport]/ MinMax.max > 1 ){\r\n                        debugger;\r\n                    }\r\n                    return  ((flow[TypeOfTransport] == -999) ? tabColorToUse(0): tabColorToUse((flow[TypeOfTransport]/ MinMax.max)));    \r\n                },\r\n                getFlowMagnitude: (flow) => flow[TypeOfTransport]  || 0,  //  flow.Study_at_home / 10 || 0,\r\n                getFlowOriginId: (flow) => flow.SA2_code_usual_residence_address,\r\n                getFlowDestId: (flow) => flow.SA2_code_educational_address,\r\n                getLocationId: (loc) => loc.properties.SA22018_V1_00,\r\n                getLocationCentroid: (location) => [location.geometry.coordinates[0], location.geometry.coordinates[1]],\r\n            });\r\n\r\n        }else{\r\n            TripLayer = new MapboxLayer({\r\n                type: FlowMapLayer,\r\n                id: 'trips',\r\n                locations: selected_centers_cities,\r\n                flows: selected_Trips,\r\n                showTotals: true,\r\n                visible: true,\r\n                maxFlowThickness:sizeTrip,\r\n                showOnlyTopFlows: 500,\r\n                //highlightedFlow:'flow',\r\n                colors: pcolors, // https://github.com/etra0/flowmap.gl/blob/master/examples/src/stories/basic.tsx\r\n                getFlowColor:(flow) => {   \r\n                    return  ((flow[TypeOfTransport] == -999) ? tabColorToUse(0): tabColorToUse((flow[TypeOfTransport]/ MinMax.max)));    \r\n                },\r\n                getFlowMagnitude: (flow) => flow[TypeOfTransport] * 10 || 0,  //  flow.Study_at_home / 10 || 0,\r\n                getFlowOriginId: (flow) => flow.SA2_code_usual_residence_address,\r\n                getFlowDestId: (flow) => flow.SA2_code_educational_address,\r\n                getLocationId: (loc) => loc.properties.SA22018_V1_00,\r\n                getLocationCentroid: (location) => [location.geometry.coordinates[0], location.geometry.coordinates[1]],\r\n            });\r\n        }\r\n\r\n        MAP.addLayer(TripLayer);\r\n\r\n\r\n    }else if ($('input[name=\"TypeFlowRadio\"]:checked').val() == \"Work\") {\r\n        let largerList = [];\r\n        let selected_Trips = [];\r\n        WORK_TRIPS.forEach(element => {\r\n            if (selectedIds.includes(element.SA2_code_workplace_address.toString()) || selectedIds.includes(element.SA2_code_usual_residence_address.toString())) {\r\n                // add the element\r\n                selected_Trips.push(element);\r\n                if (!largerList.includes(element.SA2_code_workplace_address.toString())) {\r\n                    largerList.push(element.SA2_code_workplace_address.toString());\r\n                }\r\n                if (!largerList.includes(element.SA2_code_usual_residence_address.toString())) {\r\n                    largerList.push(element.SA2_code_usual_residence_address.toString());\r\n                }\r\n            }\r\n        });\r\n        let selected_centers_cities = {\r\n            type: \"FeatureCollection\",\r\n            features: []\r\n        };\r\n        CENTER_CITIES.features.forEach(element => {\r\n            if (largerList.includes(element.properties.SA22018_V1_00)) {\r\n                // add the element\r\n                selected_centers_cities.features.push(element);\r\n            }\r\n        });\r\n\r\n\r\n\r\n        let cleanedselected_Trips = selected_Trips;\r\n        let i = cleanedselected_Trips.length;\r\n        while (i--) {\r\n            if (cleanedselected_Trips[i][TypeOfTransport] == -999) { \r\n                cleanedselected_Trips.splice(i, 1);\r\n            } \r\n        }\r\n        // get the max \r\n        let MinMax = getMaxMinTab(cleanedselected_Trips,TypeOfTransport);\r\n\r\n\r\n\r\n        let list = document.getElementById('trip-legend');\r\n        list.innerHTML = ''; // empty\r\n        for(i = 0 ; i <= 10 ; i=i+2){\r\n            let num =( MinMax.max * i )/10;\r\n            list.innerHTML += `<div><span style=\"background-color: ${tabColorToUse(i/10).hex()}\"></span>${parseInt(num)} trip</div>`;\r\n        }\r\n        list.style.display = 'block';\r\n\r\n        // do the minmax by SA2_code_usual_residence_address\r\n        var colorDic = {}; \r\n        cleanedselected_Trips.forEach(element => {\r\n            if(!(element.SA2_code_usual_residence_address in colorDic)){\r\n                colorDic[element.SA2_code_usual_residence_address] = {minmax:null, tb:[]};              \r\n            }\r\n            colorDic[element.SA2_code_usual_residence_address].tb.push(element);\r\n        });\r\n\r\n\r\n        // we also include whatever arrive ! \r\n        // cleanedselected_Trips.forEach(element => {\r\n        //     if(!(element.SA2_code_workplace_address in colorDic)){\r\n        //         colorDic[element.SA2_code_workplace_address] = {minmax:null, tb:[]};              \r\n        //     }\r\n        //     colorDic[element.SA2_code_workplace_address].tb.push(element);\r\n        // });\r\n\r\n\r\n        for (const [key, value] of Object.entries(colorDic)) {\r\n            value.minmax = getMaxMinTab(value.tb,TypeOfTransport);\r\n          }\r\n\r\n\r\n        if(VIZTYPE == 'VizAnimation'){\r\n            TripLayer = new MapboxLayer({\r\n                type: FlowMapLayer,\r\n                id: 'trips',\r\n                locations: selected_centers_cities, //   CENTER_CITIES,\r\n                flows: selected_Trips, // tripsJson,\r\n                animate: 'animated',\r\n                // getAnimatedFlowLineStaggering: (d) =>new alea(`${d.origin}-${d.dest}`)(),\r\n                showTotals: true,\r\n                visible: true,\r\n                showOnlyTopFlows: 500,\r\n                //highlightedFlow:'flow',\r\n                colors: pcolors, // https://github.com/etra0/flowmap.gl/blob/master/examples/src/stories/basic.tsx\r\n                animationCurrentTime: 100,\r\n                maxFlowThickness:sizeTrip,\r\n                getFlowColor:(flow) => {   \r\n                    return  ((flow[TypeOfTransport] == -999) ? tabColorToUse(0): tabColorToUse((flow[TypeOfTransport]/ MinMax.max)));    \r\n                    // var pMinMax = colorDic[flow.SA2_code_usual_residence_address].minmax;\r\n                    // return tabColorToUse((flow[TypeOfTransport]/ pMinMax.max)); \r\n\r\n                },\r\n                getFlowMagnitude:(flow) => {   \r\n     \r\n                    // var pMinMax = colorDic[flow.SA2_code_usual_residence_address].minmax;\r\n                    // return ((flow[TypeOfTransport]/ pMinMax.max)); \r\n                    return flow[TypeOfTransport]  || 0;  //  flow.Study_at_home / 10 || 0,\r\n                },   \r\n                getFlowOriginId: (flow) => flow.SA2_code_usual_residence_address,\r\n                getFlowDestId: (flow) => flow.SA2_code_workplace_address,\r\n                getLocationId: (loc) => loc.properties.SA22018_V1_00,\r\n                getLocationCentroid: (location) => [location.geometry.coordinates[0], location.geometry.coordinates[1]]//,\r\n                // onHover:(flow) =>{\r\n                //     var display = \"something\";\r\n                //     return null;\r\n                // }\r\n            });\r\n        }else{\r\n            TripLayer = new MapboxLayer({\r\n                type: FlowMapLayer,\r\n                id: 'trips',\r\n                locations: selected_centers_cities, \r\n                flows: selected_Trips, \r\n                showTotals: true,\r\n                visible: true,\r\n                showOnlyTopFlows: 500,\r\n                //highlightedFlow:'flow',\r\n                colors: pcolors, // https://github.com/etra0/flowmap.gl/blob/master/examples/src/stories/basic.tsx\r\n                animationCurrentTime: 100,\r\n                maxFlowThickness:sizeTrip,\r\n                getFlowColor:(flow) => {   \r\n                    return  ((flow[TypeOfTransport] == -999) ? tabColorToUse(0): tabColorToUse((flow[TypeOfTransport]/ MinMax.max)));    \r\n                },\r\n                getFlowMagnitude:   (flow) => flow[TypeOfTransport]  || 0,  //  flow.Study_at_home / 10 || 0,\r\n                getFlowOriginId: (flow) => flow.SA2_code_usual_residence_address,\r\n                getFlowDestId: (flow) => flow.SA2_code_workplace_address,\r\n                getLocationId: (loc) => loc.properties.SA22018_V1_00,\r\n                getLocationCentroid: (location) => [location.geometry.coordinates[0], location.geometry.coordinates[1]],\r\n            });\r\n        }\r\n        MAP.addLayer(TripLayer);\r\n    }\r\n    animate(0);\r\n    //TripLayer.setProps({[\"locations\"]: selected_centers_cities , [\"flows\"]: selected_Trips });\r\n}\r\n\r\n\r\n\r\nexport let AggregateLayer;\r\nexport function initAggregateLayers() {\r\n\r\n\r\n    let TypeOfTransport = TRANSPORTTYPE; \r\n    let tabColorToUse  = chroma.scale(['yellow', 'red', 'black']);\r\n    if (AggregateLayer) {\r\n        if (typeof AggregateLayer != 'undefined') {\r\n            if (MAP.getLayer(\"AggregateLayer\")) {\r\n                MAP.removeLayer('AggregateLayer');\r\n            }\r\n \r\n        }\r\n    }\r\n\r\n    // Is it to be displayed? \r\n    if(!$('#CheckAggregatedActivated').is(\":checked\")){\r\n        return;\r\n    }\r\n\r\n\r\n\r\n    // create the attribute name to display based on the user query\r\n    let attributeName = '';\r\n    if ($('input[name=\"TypeFlowRadio\"]:checked').val() == \"Educationnal\") {\r\n        attributeName = \"edu_\";\r\n    }else{\r\n        attributeName = \"work_\";\r\n    }\r\n\r\n    // define the transport mode studied  (TransportModes)\r\n    // TypeOfTransport give us that informnation \r\n    attributeName = attributeName + TypeOfTransport;\r\n\r\n    if ($('input[name=\"DirectionRadio\"]:checked').val() == \"Origin\") {\r\n        // mode origin \r\n        attributeName = attributeName + '_origin';\r\n    }else{\r\n        // mode destination\r\n        attributeName = attributeName + '_dest';\r\n    }\r\n\r\n\r\n    // the name of the attribute to change \r\n\r\n\r\n    // establish the range of color value based\r\n    var dataset = SAPOLYGON;\r\n    if (!SAPOLYGON){\r\n        return;\r\n    }\r\n\r\n\r\n\r\n    // normalise data ? \r\n    // if($('#CheckAggregatedNormalise').is(\":checked\")){\r\n\r\n    //     dataset.features.forEach(element => {\r\n    //         Object.keys(element).forEach(function(key,index) {\r\n    //              if(key.includes())\r\n    //         });\r\n    //     });\r\n\r\n    // }\r\n\r\n\r\n    var minmax = getMaxMin(dataset.features,attributeName);\r\n\r\n\r\n    // get tbale of values\r\n    var values =[];\r\n    for (i=0 ; i<dataset.features.length ; i++) {\r\n        //max = Math.max(parseFloat(geojson[i][\"properties\"][prop]), max);\r\n \r\n        if(!isNaN(parseFloat(dataset.features[i][\"properties\"][attributeName]))){\r\n            values.push(parseFloat(dataset.features[i][\"properties\"][attributeName]));\r\n        }\r\n    }\r\n\r\n    values = values.sort(function(a, b){return a-b;});\r\n \r\n    // var values = [43.96, 50.92, 45.96, 45.44, 44.95, 46.64, 44.16, 45.63, 40.4, 45.16, 44.21, 46.27, 47.93, 44.77, 45.1, 45.94, 45.53, 44.79, 44.84, 45.84, 44.22, 44.55, 45.35, 45.8, 43.67, 45.17, 47.88, 45.07, 47.95, 46.26, 44.07, 47.07, 43.73, 44.33, 46.88, 44.66, 45.16, 46.05, 44.43, 43.9, 43.33, 44.8, 47.24, 44.88, 45.43, 46.89, 46.37, 44.67, 46.62, 46.43, 45.8, 47.05];\r\n    var gs = new geostats(values);\r\n    var breaks = gs.getClassJenks(11);\r\n\r\n\r\n    let list = document.getElementById('trip-legend');\r\n    list.innerHTML = ''; // empty\r\n    let i = 0;\r\n    for(i = 0 ; i <= 10 ;  i++){\r\n        let num =( minmax.max * i )/10;\r\n        list.innerHTML += `<div><span style=\"background-color: ${tabColorToUse(i/10).hex()}\"></span>${parseInt(num)} ${$('input[name=\"TypeFlowRadio\"]:checked').val()} ${$('input[name=\"DirectionRadio\"]:checked').val()}  ${TypeOfTransport} trips</div>`;\r\n    }\r\n    list.style.display = 'block';\r\n\r\n\r\n    AggregateLayer =  MAP.addLayer({\r\n        'id': 'AggregateLayer',\r\n        'type': 'fill',\r\n        'source': 'sa2polygonsSource',\r\n        'layout': {},\r\n        'paint': {\r\n        'fill-color': [\r\n        'interpolate',\r\n        ['linear'],\r\n        ['get', attributeName],\r\n        breaks[0],\r\n        tabColorToUse(0).hex(),\r\n        breaks[1],\r\n        tabColorToUse(0.1).hex(),\r\n        breaks[2],\r\n        tabColorToUse(0.2).hex(),\r\n        breaks[3],\r\n        tabColorToUse(0.3).hex(),\r\n        breaks[4],\r\n        tabColorToUse(0.4).hex(),\r\n        breaks[5],\r\n        tabColorToUse(0.5).hex(),\r\n        breaks[6],\r\n        tabColorToUse(0.6).hex(),\r\n        breaks[7],\r\n        tabColorToUse(0.7).hex(),\r\n        breaks[8],\r\n        tabColorToUse(0.8).hex(),\r\n        breaks[9],\r\n        tabColorToUse(0.9).hex(),\r\n        breaks[10],\r\n        tabColorToUse(1).hex()\r\n        ],\r\n        'fill-opacity': 0.65\r\n        }\r\n    } );\r\n};","import '../styles/index.scss';\r\nimport JSZip from \"jszip\";\r\nimport axios from 'axios';\r\nimport {MAP,initMap,centroideLayer,initDeckglLayers} from './map';\r\n//import {renderLayer}from './vizmap';\r\nimport {URL_TRIP_EDUCATION,URL_SA2POLYGONS,URL_TRIP_WORK} from './url';\r\nimport {stopSpinner,startSpinner} from './ui';\r\nimport {land_district} from './regions';\r\nimport './ui';\r\nimport {land_Subdistrict} from './regions';\r\n\r\n\r\nstartSpinner();\r\n// initialise map\r\n \r\nvar resolveCensusDataEducation = function() {\r\n  console.log(\"getting Education data\");\r\n  return new Promise(resolve => {\r\n    axios({\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n      method: 'get',\r\n      url: URL_TRIP_EDUCATION,\r\n      responseType: 'blob'\r\n    }).then(function (response) {\r\n      var new_zip = new JSZip();\r\n      new_zip.loadAsync(response.data)\r\n      .then(function(zip) {\r\n          zip.file(\"2018-census-main-means-of-travel-to-education-by-statistical.json\").async(\"string\").then(function (data) {\r\n              resolve(   {type: 'eductionTrip', data: JSON.parse(data)}    );\r\n              return data;\r\n            });\r\n      });\r\n      return response.data;\r\n    })\r\n    .catch(error => console.log(error));\r\n  });\r\n};\r\n// work 2018-census-main-means-of-travel-to-work-by-statistical-area.zip\r\nvar resolveCensusDataWork = function() {\r\n  console.log(\"getting Education data\");\r\n  return new Promise(resolve => {\r\n    axios({\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n      method: 'get',\r\n      url: URL_TRIP_WORK,\r\n      responseType: 'blob'\r\n    }).then(function (response) {\r\n      var new_zip = new JSZip();\r\n      new_zip.loadAsync(response.data)\r\n      .then(function(zip) {\r\n          zip.file(\"2018-census-main-means-of-travel-to-work-by-statistical-area.json\").async(\"string\").then(function (data) {\r\n              resolve(   {type: 'workTrip', data: JSON.parse(data)}    );\r\n              return data;\r\n            });\r\n      });\r\n      return response.data;\r\n    })\r\n    .catch(error => console.log(error));\r\n  });\r\n};\r\nvar resolveSA2polygons = function() {\r\n  console.log(\"getting Education data\");\r\n  return new Promise(resolve => {\r\n    axios({\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n      method: 'get',\r\n      url: URL_SA2POLYGONS,\r\n      responseType: 'blob'\r\n    }).then(function (response) {\r\n      var new_zip = new JSZip();\r\n      new_zip.loadAsync(response.data)\r\n      .then(function(zip) {\r\n          zip.file(\"sa2aggregatewgs84.geojson\").async(\"string\").then(function (data) {\r\n              resolve(   {type: 'sa2', data: JSON.parse(data)}    );\r\n              return data;\r\n            });\r\n      });\r\n      return response.data;\r\n    })\r\n    .catch(error => console.log(error));\r\n  });\r\n};\r\n\r\n \r\nexport let SAPOLYGON;\r\nexport let EDUCTAIONNAL_TRIPS;\r\nexport let WORK_TRIPS;\r\nvar initialisedataparallel = function() {\r\n  console.log('==parallel initialisation==');\r\n  return Promise.all([resolveCensusDataEducation(), resolveSA2polygons(), resolveCensusDataWork()]).then((data) => {\r\n    \r\n    // console.log(data[0]); // lente\r\n    // console.log(data[1]); // rapide\r\n    // console.log(data[2]); // rapide\r\n    // Data is here, start initialising map data\r\n    \r\n    // let parseData = JSON.parse(data);\r\n    SAPOLYGON = data.find(element => element.type == 'sa2').data;\r\n    SAPOLYGON.features.forEach(element => {\r\n      element.id = element.properties.OBJECTID;\r\n    });\r\n    EDUCTAIONNAL_TRIPS = data.find(element => element.type == 'eductionTrip').data;\r\n    WORK_TRIPS = data.find(element => element.type == 'workTrip').data;\r\n    initMap();\r\n  \r\n    // renderLayer(\r\n    //   null,\r\n    //   EDUCTAIONNAL_TRIPS ,\r\n    //   SAPOLYGON,\r\n    //   []);\r\n    initDeckglLayers();\r\n    land_district(SAPOLYGON);\r\n    land_Subdistrict(SAPOLYGON);\r\n    stopSpinner();\r\n  });\r\n};\r\ninitialisedataparallel();\r\n","// export const URL_TRIP_WORK = \"https://127.0.0.1/2018-census-main-means-of-travel-to-work-by-statistical-area.zip\";\r\n// export const URL_TRIP_EDUCATION = \"https://127.0.0.1/2018-census-main-means-of-travel-to-education-by-statistical.zip\";\r\n// export const URL_SA2POLYGONS = \"https://127.0.0.1/sa2aggregatewgs84.zip\";\r\nexport const URL_TRIP_WORK = \"http://13.70.155.71/2018-census-main-means-of-travel-to-work-by-statistical-area.zip\";\r\nexport const URL_TRIP_EDUCATION = \"http://13.70.155.71/2018-census-main-means-of-travel-to-education-by-statistical.zip\";\r\nexport const URL_SA2POLYGONS = \"http://13.70.155.71/sa2aggregatewgs84.zip\";\r\n"],"sourceRoot":""}