{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/regions.js","webpack:///./src/scripts/ui.js","webpack:///./src/scripts/map.js","webpack:///./src/scripts/helper.js","webpack:///./src/scripts/url.js","webpack:///./src/scripts/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","SUBREGIONS","land_Subdistrict","AS2polygon","selectedSubregions","selectedSubregionsTable","features","forEach","elementsub","label","properties","SA22018__1","title","SA22018_V1","groupColumn","land_district","$","DataTable","columnDefs","orderable","className","targets","visible","select","style","selector","order","rowGroup","dataSrc","scrollY","scrollCollapse","paging","on","e","dt","type","indexes","subreg","rows","toArray","selected","selectedelement","toString","updateTripLayerData","SPINNER_EL","document","getElementById","TRANSPORTTYPE","VIZTYPE","TransportModes","schemaDeplacement","closeBasemapList","is","css","click","MAP","setStyle","off","shown","hide","ready","show","multiselect","buttonContainer","buttonClass","templates","button","ul","onChange","element","checked","brands","each","index","brand","this","val","SAPOLYGON","change","selected_value","component","innerHTML","entries","htmlData","prop","initAggregateLayers","centroideLayer","AggregateLayer","CENTER_CITIES","centroides","INITIAL_VIEW_STATE","tabColorBlueToPurple","chroma","scale","mapboxgl","accessToken","TripLayer","hoveredStateId","Map","container","center","zoom","bearing","pitch","require","init","selectedIds","TypeOfTransport","tabColorToUse","getLayer","removeLayer","error","largerList","selected_Trips","NatureCommute","EDUCTAIONNAL_TRIPS","includes","SA2_code_educational_address","SA2_code_usual_residence_address","WORK_TRIPS","SA2_code_workplace_address","typeFlow","selected_centers_cities","listcity","SA22018_V1_00","cleanedselected_Trips","values","isNaN","parseFloat","sort","a","b","countUniqueValues","Set","size","numberOfClasses","breaks","geostats","getClassJenks","list","hex","parseInt","display","pcolors","darkMode","flows","scheme","d3scaleChromatic","reverse","locationAreas","outline","normal","locationCircles","outgoing","incoming","outlineColor","MapboxLayer","FlowMapLayer","id","locations","animate","showTotals","showOnlyTopFlows","colors","animationCurrentTime","maxFlowThickness","getFlowColor","flow","getFlowMagnitude","getFlowOriginId","getFlowDestId","getLocationId","loc","getLocationCentroid","location","geometry","coordinates","addLayer","timestamp","Date","now","time","Math","round","loopLength","setProps","requestAnimationFrame","attributeName","dataset","minmax","geojson","max","maxTest","min","minTest","getMaxMin","num","source","layout","paint","visibility","console","log","Promise","all","resolve","axios","method","url","responseType","then","response","JSZip","loadAsync","zip","file","async","JSON","parse","catch","unique","dataitems","find","OBJECTID","setFeatureState","hover","String","hexEncode","charCodeAt","bbox","point","x","y","queryRenderedFeatures","layers","idSA2","table","eq","filter","rowIdx","cell","row","node","hasClass","deselect","attTypeFlow","attDirection","plocation","tableData","propertiesOnly","pProperties","keys","replace","radius","svg","d3","append","attr","color","domain","range","data_ready","pie","arc","innerRadius","outerRadius","outerArc","selectAll","enter","posA","centroid","posB","posC","midangle","startAngle","endAngle","PI","text","fromCharCode","schemaDeplacementImg","img","pos","getStyle","GeoJsonLayer","filled","getRadius","getFillColor","pickable","autoHighlight","addSource","initDeckglLayers","map","item"],"mappings":"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","file":"js/app.382c80d2.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([642,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { SAPOLYGON, EDUCTAIONNAL_TRIPS } from \"./index\";\r\nimport { updateTripLayerData, initAggregateLayers } from \"./map\";\r\nexport function land_district(AS2polygon) {\r\n  const unique = [\r\n    ...new Set(\r\n      AS2polygon.features.map((item) => item.properties.land_district)\r\n    ),\r\n  ];\r\n  var list = document.getElementById(\"region-checkbox-list\");\r\n  var dataitems = [];\r\n  unique.forEach((element) =>\r\n    dataitems.push({ label: element, value: element })\r\n  );\r\n  $(\"#region-checkbox-list\").multiselect(\"dataprovider\", dataitems);\r\n}\r\nexport let SUBREGIONS;\r\n/// SelectedRegions as array of regions selected by the user\r\nexport function land_Subdistrict(AS2polygon) {\r\n  //list-subregion\r\n  // \"SA22018_V1\": \"100400\",\r\n  // \"SA22018__1\": \"Karikari Peninsula\",\r\n  // \"id\": 100400,\r\n  let selectedSubregions = [];\r\n  let selectedSubregionsTable = [];\r\n  var tempSub = AS2polygon.features;\r\n  tempSub.forEach((elementsub) => {\r\n    selectedSubregions.push({\r\n      label: elementsub.properties.SA22018__1,\r\n      title: elementsub.properties.SA22018__1,\r\n      value: elementsub.properties.SA22018_V1,\r\n      groupColumn: elementsub.properties.land_district,\r\n    });\r\n    selectedSubregionsTable.push([\r\n      \"\",\r\n      elementsub.properties.SA22018__1,\r\n      elementsub.properties.SA22018_V1,\r\n      elementsub.properties.land_district,\r\n    ]);\r\n  });\r\n  // datatable element\r\n  let t = $(\"#tableregions\").DataTable({\r\n    data: selectedSubregionsTable,\r\n    columnDefs: [\r\n      {\r\n        orderable: false,\r\n        className: \"select-checkbox\",\r\n        targets: 0,\r\n      },\r\n      { visible: false, targets: 3 },\r\n    ],\r\n    select: {\r\n      style: \"os\",\r\n      selector: \"td:first-child\",\r\n      style: \"multi\",\r\n    },\r\n    order: [[3, \"asc\"]],\r\n    rowGroup: {\r\n      dataSrc: 3,\r\n    },\r\n    scrollY: \"400px\",\r\n    scrollCollapse: true,\r\n    paging: false,\r\n  });\r\n  // selectedSubregions.forEach(elementRow => {\r\n  //     t.row.add( [\r\n  //         '',\r\n  //         elementRow.label,\r\n  //         elementRow.value,\r\n  //         elementRow.groupColumn\r\n  //     ] ).draw( false );\r\n  // });\r\n  t.on(\"select\", function (e, dt, type, indexes) {\r\n    var subreg = [];\r\n    var rowData = t.rows(indexes).data().toArray();\r\n    t.rows({ selected: true })\r\n      .data()\r\n      .toArray()\r\n      .forEach((selectedelement) => {\r\n        subreg.push(selectedelement[2].toString());\r\n      });\r\n    SUBREGIONS = subreg;\r\n    updateTripLayerData();\r\n  }).on(\"deselect\", function (e, dt, type, indexes) {\r\n    var subreg = [];\r\n    var rowData = t.rows(indexes).data().toArray();\r\n    t.rows({ selected: true })\r\n      .data()\r\n      .toArray()\r\n      .forEach((selectedelement) => {\r\n        subreg.push(selectedelement[2].toString());\r\n      });\r\n    SUBREGIONS = subreg;\r\n    updateTripLayerData();\r\n  });\r\n}\r\n","import { MAP, BASEMAPS_COURCES } from \"./map\";\r\nimport { land_Subdistrict } from \"./regions\";\r\nimport { SAPOLYGON } from \"./index\";\r\nimport schemaDeplacement from \"../data/schemaDeplacement.json\";\r\nimport {\r\n  updateTripLayerData,\r\n  initAggregateLayers,\r\n  AggregateLayer,\r\n  firstSymbolId,\r\n} from \"./map\";\r\nexport const SPINNER_EL = document.getElementById(\"loader\");\r\nexport function stopSpinner() {\r\n  SPINNER_EL.style.visibility = \"hidden\";\r\n}\r\nexport function startSpinner() {\r\n  SPINNER_EL.style.visibility = \"visible\";\r\n}\r\nexport const TransportModes = schemaDeplacement;\r\nexport let TRANSPORTTYPE;\r\nexport let VIZTYPE;\r\n/* BaseMaps -------------------*/\r\nfunction closeBasemapList() {\r\n  if ($(\"#BasemapsList\").is(\":visible\")) {\r\n    $(\"#BasemapsList\").css(\"display\", \"none\"); //hidden\r\n    $(\"#BasemapsList\").css(\"visibility\", \"hidden\"); //hidden\r\n  } else {\r\n    $(\"#BasemapsList\").css(\"display\", \"flex\"); //hidden\r\n    $(\"#BasemapsList\").css(\"visibility\", \"visible\"); //hidden\r\n  }\r\n}\r\n$(\"#menuItemBasemapsManager\").click(function () {\r\n  closeBasemapList();\r\n});\r\n$(\".basemapsbtns\").on(\"click\", function () {\r\n  closeBasemapList();\r\n});\r\nfunction getlastLayerID() {\r\n  var layers = MAP.getStyle().layers;\r\n  // Find the index of the first symbol layer in the map style\r\n  var firstSymbolId;\r\n  for (var i = 0; i < layers.length; i++) {\r\n    if (layers[i].id === \"background\") {\r\n      firstSymbolId = i;\r\n      break;\r\n    }\r\n  }\r\n  return firstSymbolId + 1;\r\n}\r\n//\r\n$(\"#BMSatellite\").click(function () {\r\n  //MapBoxBasemap\r\n  MAP.setStyle(\"mapbox://styles/mapbox/satellite-v9\");\r\n});\r\n$(\"#BMLight\").click(function () {\r\n  MAP.setStyle(\"mapbox://styles/mapbox/light-v10\");\r\n});\r\n$(\"#BMDark\").click(function () {\r\n  MAP.setStyle(\"mapbox://styles/mapbox/dark-v10\");\r\n});\r\n$(\"#BMStreet\").click(function () {\r\n  MAP.setStyle(\"mapbox://styles/mapbox/streets-v11\");\r\n});\r\n$(\"#BMOutdoors\").click(function () {\r\n  MAP.setStyle(\"mapbox://styles/mapbox/outdoors-v11\");\r\n});\r\n//--Not modal\r\n$(\"#menuItemARselector\").click(function () {});\r\n$(\"#ARselector\").on(\"shown.bs.modal\", function () {\r\n  $(document).off(\"focusin.bs.modal\");\r\n  $(\".modal-backdrop\").shown();\r\n});\r\n// Aggregateselector\r\n$(\"#Aggregateselector\").on(\"shown.bs.modal\", function () {\r\n  $(document).off(\"focusin.bs.modal\");\r\n  $(\".modal-backdrop\").hide();\r\n});\r\n$(document).ready(function () {\r\n\r\n  $(\"#ARselector\").show();\r\n\r\n\r\n\r\n  $(\"#region-checkbox-list\").multiselect({\r\n    buttonContainer: '<div id=\"region-checkbox-list-container\"></div>',\r\n    buttonClass: \"\",\r\n    templates: {\r\n      button: \"\",\r\n      ul: '<ul class=\"multiselect-container checkbox-list\"></ul>',\r\n    },\r\n    onChange: function (element, checked) {\r\n      var brands = $(\"#region-checkbox-list option:selected\");\r\n      var subreg = [];\r\n      $(brands).each(function (index, brand) {\r\n        // alert([$(this).val()]);\r\n        // get the selected sub regions\r\n        subreg.push($(this).val());\r\n      });\r\n      land_Subdistrict(SAPOLYGON, subreg);\r\n    },\r\n  });\r\n  // Radio button Work / eductaion\r\n  $('input[name=\"TypeFlowRadio\"]').change(function () {\r\n    let selected_value = $('input[name=\"TypeFlowRadio\"]:checked').val();\r\n    var component = document.getElementById(\"DivTransportMode\");\r\n    component.innerHTML = \"\";\r\n    if (selected_value == \"Educationnal\") {\r\n      for (const [key, value] of Object.entries(TransportModes[\"education\"])) {\r\n        var htmlData = `<div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"transportType\" id=\"${key}\" value=\"${key}\">\r\n                    <label class=\"form-check-label\" for=\"${key}\">\r\n                    ${value}\r\n                    </label>\r\n                </div> `;\r\n        component.innerHTML += htmlData;\r\n      }\r\n    } else {\r\n      for (const [key, value] of Object.entries(TransportModes[\"work\"])) {\r\n        var htmlData = `<div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"transportType\" id=\"${key}\" value=\"${key}\">\r\n                    <label class=\"form-check-label\" for=\"${key}\">\r\n                    ${value}\r\n                    </label>\r\n                </div> `;\r\n        component.innerHTML += htmlData;\r\n      }\r\n    }\r\n    // total by default\r\n    TRANSPORTTYPE = \"Total\";\r\n    $(\"#Total\").prop(\"checked\", true);\r\n    // change the flow dataviz\r\n    updateTripLayerData();\r\n    initAggregateLayers();\r\n    $('input[name=\"transportType\"]').change(function () {\r\n      let selected_value = $('input[name=\"transportType\"]:checked').val();\r\n      TRANSPORTTYPE = selected_value;\r\n      // change the flow dataviz\r\n      updateTripLayerData();\r\n      initAggregateLayers();\r\n    });\r\n  });\r\n  // change programmaticly Educationnal - initialisation\r\n  $('input[name=\"TypeFlowRadio\"]').val = \"Educationnal\";\r\n  var component = document.getElementById(\"DivTransportMode\");\r\n  component.innerHTML = \"\";\r\n  for (const [key, value] of Object.entries(TransportModes[\"education\"])) {\r\n    var htmlData = `<div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"radio\" name=\"transportType\" id=\"${key}\" value=\"${key}\">\r\n            <label class=\"form-check-label\" for=\"${key}\">\r\n            ${value}\r\n            </label>\r\n        </div> `;\r\n    component.innerHTML += htmlData;\r\n  }\r\n  TRANSPORTTYPE = \"Total\";\r\n  $(\"#Total\").prop(\"checked\", true);\r\n  initAggregateLayers();\r\n  $('input[name=\"transportType\"]').change(function () {\r\n    let selected_value = $('input[name=\"transportType\"]:checked').val();\r\n    TRANSPORTTYPE = selected_value;\r\n    // change the flow dataviz\r\n    updateTripLayerData();\r\n    initAggregateLayers();\r\n  });\r\n  // initialise the first view\r\n  $('input[name=\"VizType\"]').change(function () {\r\n    let selected_value = $('input[name=\"VizType\"]:checked').val();\r\n    VIZTYPE = selected_value;\r\n    // change the flow dataviz\r\n    updateTripLayerData();\r\n  });\r\n  // default values\r\n  VIZTYPE = \"VizAnimation\";\r\n  // DirectionRadio\r\n  $('input[name=\"DirectionRadio\"]').change(function () {\r\n    // change the flow dataviz\r\n    initAggregateLayers();\r\n  });\r\n  $(\"#CheckFlowActivated\").change(function () {\r\n    if ($(\"#CheckFlowActivated\").is(\":checked\")) {\r\n      $(\"#CheckAggregatedActivated\").prop(\"checked\", false);\r\n    }\r\n    initAggregateLayers();\r\n    updateTripLayerData();\r\n  });\r\n  $(\"#CheckAggregatedActivated\").change(function () {\r\n    if ($(\"#CheckAggregatedActivated\").is(\":checked\")) {\r\n      $(\"#CheckFlowActivated\").prop(\"checked\", false);\r\n    }\r\n    initAggregateLayers();\r\n    updateTripLayerData();\r\n  });\r\n});\r\n","import mapboxgl from \"mapbox-gl\";\r\nimport { Deck } from \"@deck.gl/core\";\r\nimport { GeoJsonLayer, ArcLayer } from \"@deck.gl/layers\";\r\nimport { MapboxLayer } from \"@deck.gl/mapbox\";\r\nimport FlowMapLayer from \"@flowmap.gl/core\";\r\nimport { TripsLayer } from \"@deck.gl/geo-layers\";\r\nimport chroma from \"chroma-js\";\r\nimport * as d3 from \"d3\";\r\nimport * as geostats from \"geostats\";\r\nexport const MAPBOXKEY =\r\n  \"pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA\";\r\nexport const MAPBOXSTYLEBLUE =\r\n  \"mapbox://styles/antonin64/cj6yh5j1qazk52ro1axmm3a6w\";\r\nexport const MAPBOXSTYLEDARKDEFAULT = \"mapbox://styles/mapbox/dark-v9\";\r\nexport const MAPBOXSTYLELIGHTDEFAULT = \"mapbox://styles/mapbox/light-v9\";\r\nimport centroides from \"../data/sa2centroides.json\";\r\nimport schemaDeplacementImg from \"../data/schemaDeplacementImage.json\";\r\nimport { getMaxMin, getMaxMinTab } from \"./helper\";\r\nimport { SAPOLYGON, EDUCTAIONNAL_TRIPS, WORK_TRIPS } from \"./index\";\r\nimport * as d3scaleChromatic from \"d3-scale-chromatic\";\r\nimport { SUBREGIONS } from \"./regions\";\r\nimport { TRANSPORTTYPE, VIZTYPE, TransportModes } from \"./ui\";\r\nconst CENTER_CITIES = centroides;\r\nexport const CURRENTBASEMAP = {\r\n  id: \"MapBoxBasemap\",\r\n  type: \"raster\",\r\n  source: {\r\n    type: \"raster\",\r\n    tiles: [\r\n      \"https://api.mapbox.com/styles/v1/antonin64/cj6yh5j1qazk52ro1axmm3a6w/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA\",\r\n    ],\r\n    tileSize: 256,\r\n  },\r\n  paint: {},\r\n};\r\nexport const SOURCE_MAPBOX_PERSO = {\r\n  type: \"raster\",\r\n  tiles: [\r\n    \"https://api.mapbox.com/styles/v1/antonin64/cj6yh5j1qazk52ro1axmm3a6w/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA\",\r\n  ],\r\n  tileSize: 256,\r\n};\r\nexport const SOURCE_MAPBOX_LIGHT = {\r\n  type: \"raster\",\r\n  tiles: [\r\n    \"https://api.mapbox.com/styles/v1/mapbox/light-v10/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA\",\r\n  ],\r\n  tileSize: 256,\r\n};\r\nexport const SOURCE_MAPBOX_DARK = {\r\n  type: \"raster\",\r\n  tiles: [\r\n    \"https://api.mapbox.com/styles/v1/mapbox/dark-v10/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYW50b25pbjY0IiwiYSI6ImNqNnlnc2F0MjAybmwyd2xydWxkcGZ2cG4ifQ.TBlcogPpj9WVTV41EAYGjA\",\r\n  ],\r\n  tileSize: 256,\r\n};\r\nexport const SOURCE_OSM = {\r\n  type: \"raster\",\r\n  tiles: [\"https://b.tile.osm.org/{z}/{x}/{y}.png\"],\r\n  tileSize: 256,\r\n};\r\nexport const SOURCE_LINZ = {\r\n  type: \"raster\",\r\n  tiles: [\r\n    \"http://tiles-a.data-cdn.linz.govt.nz/services;key=f11577986e92458baa1bc5497c3c0d41/tiles/v4/set=4702/EPSG:3857/{z}/{x}/{y}.png\",\r\n  ],\r\n  tileSize: 256,\r\n};\r\nexport let SYMBOL_LABEL_ID = \"0\";\r\nexport const INITIAL_VIEW_STATE = {\r\n  latitude: -41.53333,\r\n  longitude: 172.63333,\r\n  zoom: 5,\r\n  bearing: 0,\r\n  pitch: 0,\r\n};\r\nexport let centroideLayer;\r\nexport let polygonSA2Layer;\r\nexport let firstSymbolId;\r\nexport let AggregateLayer;\r\nconst tabColorBlueToPurple = chroma.scale([\r\n  \"65d265\",\r\n  \"80d265\",\r\n  \"9cd265\",\r\n  \"b7d265\",\r\n  \"d2d265\",\r\n  \"d2b765\",\r\n  \"d29c65\",\r\n  \"d28065\",\r\n  \"d26565\",\r\n]);\r\nmapboxgl.accessToken = MAPBOXKEY; // eslint-disable-line\r\nconst emptyStyle = {\r\n  version: 8,\r\n  name: \"Empty\",\r\n  sources: {},\r\n  layers: [\r\n    {\r\n      id: \"background\",\r\n      type: \"background\",\r\n      paint: {\r\n        //\"background-color\": \"hsl(47, 26%, 88%)\"\r\n      },\r\n    },\r\n  ],\r\n  id: \"empty\",\r\n};\r\nlet hoveredStateId = null;\r\n\r\nexport let MAP = new mapboxgl.Map({\r\n  container: \"map\",\r\n  style: \"mapbox://styles/mapbox/dark-v10\", // emptyStyle,\r\n  center: [INITIAL_VIEW_STATE.longitude, INITIAL_VIEW_STATE.latitude],\r\n  zoom: INITIAL_VIEW_STATE.zoom,\r\n  bearing: INITIAL_VIEW_STATE.bearing,\r\n  pitch: INITIAL_VIEW_STATE.pitch,\r\n});\r\nexport const U = require(\"mapbox-gl-utils\").init(MAP);\r\n\r\nexport function initMap() {\r\n  MAP.on(\"style.load\", function () {\r\n    // // MAP.addLayer(CURRENTBASEMAP);\r\n    // MAP.addSource('SOURCE_LINZ', SOURCE_LINZ);\r\n    // MAP.addSource('SOURCE_OSM', SOURCE_OSM);\r\n    // MAP.addSource('SOURCE_MAPBOX_PERSO', SOURCE_MAPBOX_PERSO);\r\n    // // MAP.addSource('SOURCE_MAPBOX_LIGHT', SOURCE_MAPBOX_LIGHT);\r\n    // // MAP.addControl(new mapboxgl.AttributionControl(), 'top-right');\r\n    // // symbol id\r\n    // let layers = MAP.getStyle().layers;\r\n    // // Find the index of the first symbol layer in the map style\r\n    // for (let i = 0; i < layers.length; i++) {\r\n    //     if (layers[i].type === 'symbol') {\r\n    //         SYMBOL_LABEL_ID = layers[i].id;\r\n    //         break;\r\n    //     }\r\n    // }\r\n    // initDeckglLayers();\r\n  });\r\n\r\n  MAP.on(\"mousemove\", \"sa2OverFills\", function (e) {\r\n    if (e.features.length > 0) {\r\n      if (hoveredStateId) {\r\n        MAP.setFeatureState(\r\n          {\r\n            source: \"sa2OverSource\",\r\n            id: hoveredStateId,\r\n          },\r\n          {\r\n            hover: false,\r\n          }\r\n        );\r\n      }\r\n      hoveredStateId = e.features[0].id;\r\n      MAP.setFeatureState(\r\n        {\r\n          source: \"sa2OverSource\",\r\n          id: hoveredStateId,\r\n        },\r\n        {\r\n          hover: true,\r\n        }\r\n      );\r\n    }\r\n  });\r\n\r\n  MAP.on(\"mouseleave\", \"sa2OverFills\", function () {\r\n    if (hoveredStateId) {\r\n      MAP.setFeatureState(\r\n        {\r\n          source: \"sa2OverSource\",\r\n          id: hoveredStateId,\r\n        },\r\n        {\r\n          hover: false,\r\n        }\r\n      );\r\n    }\r\n    hoveredStateId = null;\r\n  });\r\n\r\n  String.prototype.hexEncode = function () {\r\n    let hex, i;\r\n    let result = \"\";\r\n    for (i = 0; i < this.length; i++) {\r\n      hex = this.charCodeAt(i).toString(16);\r\n      result += (\"000\" + hex).slice(-4);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  MAP.on(\"click\", function (e) {\r\n    if (!$(\"#CheckFlowActivated\").is(\":checked\")) {\r\n      // Aggregate view\r\n      let bbox = [\r\n        [e.point.x - 2, e.point.y - 2],\r\n        [e.point.x + 2, e.point.y + 2],\r\n      ];\r\n      let features = MAP.queryRenderedFeatures(bbox, {\r\n        layers: [\"AggregateLayer\"],\r\n      });\r\n      let attTypeFlow = \"\";\r\n      if ($('input[name=\"TypeFlowRadio\"]:checked').val() == \"Educationnal\") {\r\n        attTypeFlow = \"edu_\";\r\n      } else {\r\n        attTypeFlow = \"work_\";\r\n      }\r\n      let attDirection = \"\";\r\n      if ($('input[name=\"DirectionRadio\"]:checked').val() == \"Origin\") {\r\n        // mode origin\r\n        attDirection = \"_origin\";\r\n      } else {\r\n        // mode destination\r\n        attDirection = \"_dest\";\r\n      }\r\n      let plocation = \"\";\r\n      let tableData = {};\r\n      let propertiesOnly = [];\r\n      if (features != null) {\r\n        if (features.length > 0) {\r\n          let pProperties = features[0].properties;\r\n          plocation = features[0].properties.SA22018__1;\r\n          Object.keys(pProperties).forEach(function (key, index) {\r\n            if (\r\n              key.includes(attTypeFlow) &&\r\n              key.includes(attDirection) &&\r\n              !key.includes(\"Total\")\r\n            ) {\r\n              if (typeof pProperties[key] == \"number\") {\r\n                if (pProperties[key] > 0) {\r\n                  tableData[\r\n                    key.replace(attTypeFlow, \"\").replace(attDirection, \"\")\r\n                  ] = pProperties[key];\r\n                  propertiesOnly.push(\r\n                    key.replace(attTypeFlow, \"\").replace(attDirection, \"\")\r\n                  );\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n      let location = document.getElementById(\"location\");\r\n      location.innerHTML = plocation;\r\n      let pchart = document.getElementById(\"chart\");\r\n      pchart.innerHTML = \"\"; // empty\r\n      // create the chart and display\r\n      // set the dimensions and margins of the graph\r\n      let width = 300;\r\n      let height = 300;\r\n      let margin = 50;\r\n      // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\r\n      let radius = Math.min(width, height) / 2 - margin;\r\n      // append the svg object to the div called 'my_dataviz'\r\n      let svg = d3\r\n        .select(\"#chart\")\r\n        .append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n      let data = tableData;\r\n      let color = d3\r\n        .scaleOrdinal()\r\n        .domain(propertiesOnly)\r\n        .range(d3.schemeCategory10);\r\n      let pie = d3\r\n        .pie()\r\n        .sort(null)\r\n        .value(function (d) {\r\n          return d.value;\r\n        });\r\n      let data_ready = pie(d3.entries(data));\r\n      let arc = d3\r\n        .arc()\r\n        .innerRadius(radius * 0.5)\r\n        .outerRadius(radius * 0.8);\r\n      let outerArc = d3\r\n        .arc()\r\n        .innerRadius(radius * 0.9)\r\n        .outerRadius(radius * 0.9);\r\n      svg\r\n        .selectAll(\"allSlices\")\r\n        .data(data_ready)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", arc)\r\n        .attr(\"fill\", function (d) {\r\n          return color(d.data.key);\r\n        })\r\n        .attr(\"stroke\", \"white\")\r\n        .style(\"stroke-width\", \"2px\")\r\n        .style(\"opacity\", 0.7);\r\n      svg\r\n        .selectAll(\"allPolylines\")\r\n        .data(data_ready)\r\n        .enter()\r\n        .append(\"polyline\")\r\n        .attr(\"stroke\", \"black\")\r\n        .style(\"fill\", \"none\")\r\n        .attr(\"stroke-width\", 1)\r\n        .attr(\"points\", function (d) {\r\n          let posA = arc.centroid(d);\r\n          let posB = outerArc.centroid(d);\r\n          let posC = outerArc.centroid(d);\r\n          let midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n          posC[0] = radius * 0.95 * (midangle < Math.PI ? 1 : -1);\r\n          return [posA, posB, posC];\r\n        });\r\n      svg\r\n        .selectAll(\"allLabels\")\r\n        .data(data_ready)\r\n        .enter()\r\n        .append(\"text\")\r\n        .attr(\"class\", \"fa\")\r\n        .attr(\"font-size\", function (d) {\r\n          return d.size * 2 + \"em\";\r\n        })\r\n        .text(function (d) {\r\n          return `${String.fromCharCode(\r\n            \"0x\" + schemaDeplacementImg.img[d.data.key]\r\n          )}:${d.data.value}`;\r\n        }) // '\\uf118'\r\n        .attr(\"transform\", function (d) {\r\n          let pos = outerArc.centroid(d);\r\n          let midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n          pos[0] = radius * 0.99 * (midangle < Math.PI ? 1 : -1);\r\n          return \"translate(\" + pos + \")\";\r\n        })\r\n        .style(\"text-anchor\", function (d) {\r\n          let midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n          return midangle < Math.PI ? \"start\" : \"end\";\r\n        });\r\n    } else {\r\n      let bbox = [\r\n        [e.point.x - 2, e.point.y - 2],\r\n        [e.point.x + 2, e.point.y + 2],\r\n      ];\r\n      let features = MAP.queryRenderedFeatures(bbox, {\r\n        layers: [\"sa2OverFills\"],\r\n      });\r\n      if (features != null) {\r\n        if (features.length > 0) {\r\n          let idSA2 = features[0].properties.SA22018_V1;\r\n          let table = $(\"#tableregions\").DataTable();\r\n          let indexes = table\r\n            .rows()\r\n            .eq(0)\r\n            .filter(function (rowIdx) {\r\n              return table.cell(rowIdx, 2).data() === idSA2 ? true : false;\r\n            });\r\n          let row = table.row(indexes);\r\n          let found = false;\r\n          let $tr = $(row.node());\r\n          if ($tr.hasClass(\"selected\")) {\r\n            table.rows(indexes).deselect();\r\n          } else {\r\n            table.rows(indexes).select();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport function initDeckglLayers() {\r\n  let layers = MAP.getStyle().layers;\r\n  for (let i = 0; i < layers.length; i++) {\r\n    if (layers[i].type === \"symbol\") {\r\n      firstSymbolId = layers[i].id;\r\n      break;\r\n    }\r\n  }\r\n  console.log(\"start create the layer\");\r\n  // Addin the deckgl layers\r\n  centroideLayer = new MapboxLayer({\r\n    type: GeoJsonLayer,\r\n    id: \"centroides\",\r\n    data: [],\r\n    filled: true,\r\n    getRadius: 50,\r\n    radius: 10,\r\n    getFillColor: [178, 245, 86, 180],\r\n    pickable: true,\r\n    autoHighlight: true,\r\n    // onClick: (info) =>\r\n    //   info.object &&\r\n    //   alert(\r\n    //     `${info.object.properties.name} (${info.object.properties.abbrev})`\r\n    //   ),\r\n  });\r\n  let idstart = MAP.addLayer(centroideLayer);\r\n  centroideLayer.setProps({\r\n    [\"data\"]: CENTER_CITIES,\r\n  });\r\n  console.log(\"centroides\");\r\n  MAP.addSource(\"sa2OverSource\", {\r\n    type: \"geojson\",\r\n    data: SAPOLYGON,\r\n  });\r\n  polygonSA2Layer = MAP.addLayer({\r\n    id: \"sa2OverFills\",\r\n    type: \"fill\",\r\n    source: \"sa2OverSource\",\r\n    layout: {},\r\n    paint: {\r\n      \"fill-color\": \"#ffffff\",\r\n      \"fill-opacity\": [\r\n        \"case\",\r\n        [\"boolean\", [\"feature-state\", \"hover\"], false],\r\n        0.3,\r\n        0.0,\r\n      ],\r\n    },\r\n  });\r\n  MAP.addLayer({\r\n    id: \"sa2OverLines\",\r\n    type: \"line\",\r\n    source: \"sa2OverSource\",\r\n    layout: {},\r\n    paint: {\r\n      \"line-color\": \"#EC6608\",\r\n      \"line-width\": 1,\r\n    },\r\n  });\r\n  console.log(\"polygoons\");\r\n  let dataset = SAPOLYGON;\r\n  MAP.addSource(\"sa2polygonsSource\", {\r\n    type: \"geojson\",\r\n    data: dataset,\r\n  });\r\n  console.log(\"init source polygoons\");\r\n}\r\nexport let TripLayer;\r\nfunction animate() {\r\n  let loopLength = 18000;\r\n  let animationSpeed = 30;\r\n  const timestamp = Date.now() / 1000;\r\n  const loopTime = loopLength / animationSpeed;\r\n  let time = Math.round(((timestamp % loopTime) / loopTime) * loopLength);\r\n  if (TripLayer) {\r\n    TripLayer.setProps({\r\n      [\"animationCurrentTime\"]: time,\r\n    });\r\n  }\r\n  window.requestAnimationFrame(animate.bind(this));\r\n}\r\nexport const MIN_ZOOM_LEVEL = 0;\r\nexport const MAX_ZOOM_LEVEL = 20;\r\nexport function updateTripLayerData() {\r\n  let selectedIds = SUBREGIONS;\r\n  let TypeOfTransport = TRANSPORTTYPE;\r\n  let tabColorToUse = tabColorBlueToPurple;\r\n  const sizeTrip = 8;\r\n  if (!selectedIds) return;\r\n  if (TripLayer != null && TripLayer) {\r\n    if (typeof TripLayer !== \"undefined\") {\r\n      try {\r\n        if (MAP.getLayer(\"trips\")) {\r\n          MAP.removeLayer(\"trips\");\r\n        }\r\n      } catch (error) {}\r\n    }\r\n  }\r\n  if (!$(\"#CheckFlowActivated\").is(\":checked\")) {\r\n    return;\r\n  }\r\n\r\n  let largerList = [];\r\n  let selected_Trips = [];\r\n  let NatureCommute = '';\r\n  if ($('input[name=\"TypeFlowRadio\"]:checked').val() == \"Educationnal\") {\r\n    NatureCommute = \"education\";\r\n    EDUCTAIONNAL_TRIPS.forEach((element) => {\r\n      if (\r\n        selectedIds.includes(element.SA2_code_educational_address.toString()) ||\r\n        selectedIds.includes(\r\n          element.SA2_code_usual_residence_address.toString()\r\n        )\r\n      ) {\r\n        // add the element\r\n        selected_Trips.push(element);\r\n        if (\r\n          !largerList.includes(element.SA2_code_educational_address.toString())\r\n        ) {\r\n          largerList.push(element.SA2_code_educational_address.toString());\r\n        }\r\n        if (\r\n          !largerList.includes(\r\n            element.SA2_code_usual_residence_address.toString()\r\n          )\r\n        ) {\r\n          largerList.push(element.SA2_code_usual_residence_address.toString());\r\n        }\r\n      }\r\n    });\r\n  } else   {\r\n    NatureCommute = \"work\";\r\n    WORK_TRIPS.forEach((element) => {\r\n      if (\r\n        selectedIds.includes(element.SA2_code_workplace_address.toString()) ||\r\n        selectedIds.includes(\r\n          element.SA2_code_usual_residence_address.toString()\r\n        )\r\n      ) {\r\n        selected_Trips.push(element);\r\n        if (\r\n          !largerList.includes(element.SA2_code_workplace_address.toString())\r\n        ) {\r\n          largerList.push(element.SA2_code_workplace_address.toString());\r\n        }\r\n        if (\r\n          !largerList.includes(\r\n            element.SA2_code_usual_residence_address.toString()\r\n          )\r\n        ) {\r\n          largerList.push(element.SA2_code_usual_residence_address.toString());\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  let typeFlow = VIZTYPE == \"VizAnimation\" ? \"animated\" : null;\r\n\r\n  // only display the selected flows  selectedIds\r\n  // CENTER_CITIES\r\n  // const unique = [...new Set(AS2polygon.features.map(item => item.properties.land_district))];\r\n  // property SA22018_V1_00: \"105300\"\r\n  let selected_centers_cities = {\r\n    type: \"FeatureCollection\",\r\n    features: [],\r\n  };\r\n\r\n  let listcity = [];\r\n  CENTER_CITIES.features.forEach((element) => {\r\n    if (largerList.includes(element.properties.SA22018_V1_00)) {\r\n      // add the element\r\n      selected_centers_cities.features.push(element);\r\n      listcity.push(element.properties.SA22018_V1_00);\r\n    }\r\n  });\r\n  let cleanedselected_Trips = selected_Trips;\r\n  let i = cleanedselected_Trips.length;\r\n  while (i--) {\r\n    if (cleanedselected_Trips[i][TypeOfTransport] == -999) {\r\n      cleanedselected_Trips.splice(i, 1);\r\n    }\r\n  }\r\n\r\n\r\n  // // get the max\r\n  // let MinMax = getMaxMinTab(cleanedselected_Trips, TypeOfTransport);\r\n  // // change legend\r\n  // let list = document.getElementById(\"trip-legend\");\r\n  // list.innerHTML = \"\"; // empty\r\n  // for (i = 0; i <= 10; i = i + 2) {\r\n  //   let num = (MinMax.max * i) / 10;\r\n  //   list.innerHTML += `<div><span style=\"background-color: ${tabColorToUse(\r\n  //     i / 10\r\n  //   ).hex()}\"></span>${parseInt(num)} trip</div>`;\r\n  // }\r\n  // list.style.display = \"block\";\r\n  // // do the minmax by SA2_code_usual_residence_address\r\n  // let colorDic = {};\r\n  // cleanedselected_Trips.forEach((element) => {\r\n  //   if (!(element.SA2_code_usual_residence_address in colorDic)) {\r\n  //     colorDic[element.SA2_code_usual_residence_address] = {\r\n  //       minmax: null,\r\n  //       tb: [],\r\n  //     };\r\n  //   }\r\n  //   colorDic[element.SA2_code_usual_residence_address].tb.push(element);\r\n  // });\r\n\r\n\r\n  // Classes & symbology\r\n  let values = [];\r\n  for (i = 0; i < cleanedselected_Trips.length; i++) {\r\n    if (!isNaN(parseFloat(cleanedselected_Trips[i][TypeOfTransport]))) {\r\n      values.push(parseFloat(cleanedselected_Trips[i][TypeOfTransport]));\r\n    }\r\n  }\r\n  values = values.sort(function (a, b) {\r\n    return a - b;\r\n  });\r\n  const countUniqueValues = new Set(values).size;\r\n  const numberOfClasses = (countUniqueValues>=10)?10:countUniqueValues;\r\n  let gs = new geostats(values);\r\n  let breaks = gs.getClassJenks(numberOfClasses-1);\r\n  tabColorToUse = chroma.scale([\"green\",\"yellow\", \"red\" ]);\r\n\r\n\r\n\r\n  // legend\r\n  let list = document.getElementById(\"trip-legend\");\r\n  list.innerHTML = \"\"; // empty\r\n \r\n  for (let index = 0; index < numberOfClasses; index++) {\r\n    list.innerHTML += `<div><span style=\"background-color: ${tabColorToUse(\r\n      index/(numberOfClasses)\r\n    ).hex()}\"></span>${parseInt(breaks[index])} trips</div>`;\r\n  }\r\n\r\n  list.style.display = \"block\";\r\n\r\n\r\n\r\n\r\n  // color scheme\r\n  const scheme = d3scaleChromatic.schemeOrRd[\r\n    d3scaleChromatic.schemeOrRd.length - 1\r\n  ]\r\n    .slice()\r\n    .reverse();\r\n  const pcolors = {\r\n    darkMode: true,\r\n    flows: {\r\n      scheme,\r\n    },\r\n    locationAreas: {\r\n      outline: 'rgba(11,112,128,0.5)',\r\n      normal: 'rgba(100,220,220,0.5)'\r\n    },\r\n    locationCircles: {\r\n      outgoing:  '#ABA681'  ,\r\n      incoming:  '#77733F'  ,\r\n    },\r\n    outlineColor: \"#000\",\r\n  };\r\n\r\n  TripLayer = new MapboxLayer({\r\n    type: FlowMapLayer,\r\n    id: \"trips\",\r\n    locations: selected_centers_cities, //   CENTER_CITIES,\r\n    flows: selected_Trips, // tripsJson,\r\n    animate: typeFlow,\r\n    // getAnimatedFlowLineStaggering: (d) =>new alea(`${d.origin}-${d.dest}`)(),\r\n    showTotals: true,\r\n    visible: true,\r\n    showOnlyTopFlows: 500,\r\n    colors:pcolors,\r\n    // highlightedFlow:'flow',\r\n    // colors: pcolors, // https://github.com/etra0/flowmap.gl/blob/master/examples/src/stories/basic.tsx\r\n    animationCurrentTime: 100,\r\n    maxFlowThickness: sizeTrip,\r\n    getFlowColor: (flow) => {\r\n\r\n      for (let index = 0; index < numberOfClasses; index++) {\r\n        if(flow[TypeOfTransport] >= breaks[index] && flow[TypeOfTransport] < breaks[index+1] ){\r\n          return tabColorToUse(index/(numberOfClasses)).hex();\r\n        }\r\n      }\r\n      // return flow[TypeOfTransport] == -999\r\n      //   ? tabColorToUse(0)\r\n      //   : tabColorToUse(flow[TypeOfTransport] / MinMax.max);\r\n    },\r\n    getFlowMagnitude: (flow) => flow[TypeOfTransport] || 0, //  flow.Study_at_home / 10 || 0,\r\n    getFlowOriginId: (flow) => flow.SA2_code_usual_residence_address,\r\n    getFlowDestId: (flow) => (NatureCommute == 'education') ? flow.SA2_code_educational_address : flow.SA2_code_workplace_address,\r\n    getLocationId: (loc) => loc.properties.SA22018_V1_00,\r\n    getLocationCentroid: (location) => [\r\n      location.geometry.coordinates[0],\r\n      location.geometry.coordinates[1],\r\n    ],\r\n  });\r\n\r\n  MAP.addLayer(TripLayer);\r\n  animate(0);\r\n  //TripLayer.setProps({[\"locations\"]: selected_centers_cities , [\"flows\"]: selected_Trips });\r\n}\r\n\r\nexport function initAggregateLayers() {\r\n  let TypeOfTransport = TRANSPORTTYPE;\r\n  let tabColorToUse = chroma.scale([\"yellow\", \"red\", \"black\"]);\r\n  if (AggregateLayer) {\r\n    if (typeof AggregateLayer != \"undefined\") {\r\n      if (MAP.getLayer(\"AggregateLayer\")) {\r\n        MAP.removeLayer(\"AggregateLayer\");\r\n      }\r\n    }\r\n  }\r\n  // Is it to be displayed?\r\n  if (!$(\"#CheckAggregatedActivated\").is(\":checked\")) {\r\n    return;\r\n  }\r\n  // create the attribute name to display based on the user query\r\n  let attributeName = \"\";\r\n  if ($('input[name=\"TypeFlowRadio\"]:checked').val() == \"Educationnal\") {\r\n    attributeName = \"edu_\";\r\n  } else {\r\n    attributeName = \"work_\";\r\n  }\r\n  // define the transport mode studied  (TransportModes)\r\n  // TypeOfTransport give us that informnation\r\n  attributeName = attributeName + TypeOfTransport;\r\n  if ($('input[name=\"DirectionRadio\"]:checked').val() == \"Origin\") {\r\n    // mode origin\r\n    attributeName = attributeName + \"_origin\";\r\n  } else {\r\n    // mode destination\r\n    attributeName = attributeName + \"_dest\";\r\n  }\r\n  // the name of the attribute to change\r\n  // establish the range of color value based\r\n  let dataset = SAPOLYGON;\r\n  if (!SAPOLYGON) {\r\n    return;\r\n  }\r\n  let minmax = getMaxMin(dataset.features, attributeName);\r\n  // get tbale of values\r\n  let values = [];\r\n  for (i = 0; i < dataset.features.length; i++) {\r\n    //max = Math.max(parseFloat(geojson[i][\"properties\"][prop]), max);\r\n    if (!isNaN(parseFloat(dataset.features[i][\"properties\"][attributeName]))) {\r\n      values.push(parseFloat(dataset.features[i][\"properties\"][attributeName]));\r\n    }\r\n  }\r\n  values = values.sort(function (a, b) {\r\n    return a - b;\r\n  });\r\n  let gs = new geostats(values);\r\n  let breaks = gs.getClassJenks(11);\r\n  let list = document.getElementById(\"trip-legend\");\r\n  list.innerHTML = \"\"; // empty\r\n  let i = 0;\r\n  for (i = 0; i <= 10; i++) {\r\n    let num = (minmax.max * i) / 10;\r\n    list.innerHTML += `<div><span style=\"background-color: ${tabColorToUse(\r\n      i / 10\r\n    ).hex()}\"></span>${parseInt(num)} ${$(\r\n      'input[name=\"TypeFlowRadio\"]:checked'\r\n    ).val()} ${$(\r\n      'input[name=\"DirectionRadio\"]:checked'\r\n    ).val()}  ${TypeOfTransport} trips</div>`;\r\n  }\r\n  list.style.display = \"block\";\r\n  AggregateLayer = MAP.addLayer({\r\n    id: \"AggregateLayer\",\r\n    type: \"fill\",\r\n    source: \"sa2polygonsSource\",\r\n    layout: {},\r\n    paint: {\r\n      \"fill-color\": [\r\n        \"interpolate\",\r\n        [\"linear\"],\r\n        [\"get\", attributeName],\r\n        breaks[0],\r\n        \"#B8B8B8\",\r\n        breaks[1],\r\n        tabColorToUse(0.1).hex(),\r\n        breaks[2],\r\n        tabColorToUse(0.2).hex(),\r\n        breaks[3],\r\n        tabColorToUse(0.3).hex(),\r\n        breaks[4],\r\n        tabColorToUse(0.4).hex(),\r\n        breaks[5],\r\n        tabColorToUse(0.5).hex(),\r\n        breaks[6],\r\n        tabColorToUse(0.6).hex(),\r\n        breaks[7],\r\n        tabColorToUse(0.7).hex(),\r\n        breaks[8],\r\n        tabColorToUse(0.8).hex(),\r\n        breaks[9],\r\n        tabColorToUse(0.9).hex(),\r\n        breaks[10],\r\n        tabColorToUse(1).hex(),\r\n      ],\r\n      \"fill-opacity\": 0.65,\r\n    },\r\n  });\r\n}\r\n","export function getMaxMin(geojson, prop) {\r\n    var max = -10000000;\r\n    for (var i=0 ; i<geojson.length ; i++) {\r\n        var  maxTest =  Math.max(parseFloat(geojson[i][\"properties\"][prop]), max); \r\n        if(!isNaN(maxTest)){\r\n            max = maxTest;\r\n        }\r\n    }\r\n    var min = 10000000;\r\n    for (var i=0 ; i<geojson.length ; i++) {\r\n        var  minTest = Math.min(parseFloat(geojson[i][\"properties\"][prop]), min); \r\n        if(!isNaN(minTest)){\r\n            min = minTest;\r\n        }\r\n    }\r\n    return {min:min,max:max};\r\n}\r\n\r\nexport function getMaxMinTab(table, prop) {\r\n    var max = -10000000;\r\n    for (var i=0 ; i<table.length ; i++) {\r\n        max = Math.max(parseFloat(table[i][prop]), max);\r\n    }\r\n    var min = 10000000;\r\n    for (var i=0 ; i<table.length ; i++) {\r\n        if(parseFloat(table[i][prop] == -999)) {\r\n            continue;\r\n        }\r\n        min = Math.min(parseFloat(table[i][prop]), min);\r\n    }\r\n    return {min:min,max:max};\r\n}","// export const URL_TRIP_WORK = \"http://127.0.0.1/2018-census-main-means-of-travel-to-work-by-statistical-area.zip\";\r\n// export const URL_TRIP_EDUCATION = \"http://127.0.0.1/2018-census-main-means-of-travel-to-education-by-statistical.zip\";\r\n// export const URL_SA2POLYGONS = \"http://127.0.0.1/sa2aggregatewgs84.zip\";\r\nexport const URL_TRIP_WORK = \"https://13.70.155.71/2018-census-main-means-of-travel-to-work-by-statistical-area.zip\";\r\nexport const URL_TRIP_EDUCATION = \"https://13.70.155.71/2018-census-main-means-of-travel-to-education-by-statistical.zip\";\r\nexport const URL_SA2POLYGONS = \"https://13.70.155.71/sa2aggregatewgs84.zip\";\r\n","import \"core-js/stable\";\r\nimport \"regenerator-runtime/runtime\";\r\nimport \"../styles/index.scss\";\r\nimport JSZip from \"jszip\";\r\nimport axios from \"axios\";\r\nimport { MAP, initMap, centroideLayer, initDeckglLayers } from \"./map\";\r\nimport { URL_TRIP_EDUCATION, URL_SA2POLYGONS, URL_TRIP_WORK } from \"./url\";\r\nimport { stopSpinner, startSpinner } from \"./ui\";\r\nimport { land_district } from \"./regions\";\r\nimport \"./ui\";\r\nimport { land_Subdistrict } from \"./regions\";\r\nexport let SAPOLYGON;\r\nexport let EDUCTAIONNAL_TRIPS;\r\nexport let WORK_TRIPS;\r\n\r\nstartSpinner();\r\nvar resolveCensusDataEducation = function () {\r\n  console.log(\"getting Education data\");\r\n  return new Promise((resolve) => {\r\n    axios({\r\n      // headers: {\r\n      //   'Access-Control-Allow-Origin': '*',\r\n      // },\r\n      method: \"get\",\r\n      url: URL_TRIP_EDUCATION,\r\n      responseType: \"blob\",\r\n    })\r\n      .then(function (response) {\r\n        var new_zip = new JSZip();\r\n        new_zip.loadAsync(response.data).then(function (zip) {\r\n          zip\r\n            .file(\r\n              \"2018-census-main-means-of-travel-to-education-by-statistical.json\"\r\n            )\r\n            .async(\"string\")\r\n            .then(function (data) {\r\n              resolve({ type: \"eductionTrip\", data: JSON.parse(data) });\r\n              return data;\r\n            });\r\n        });\r\n        return response.data;\r\n      })\r\n      .catch((error) => console.log(error));\r\n  });\r\n};\r\n// work 2018-census-main-means-of-travel-to-work-by-statistical-area.zip\r\nvar resolveCensusDataWork = function () {\r\n  console.log(\"getting Education data\");\r\n  return new Promise((resolve) => {\r\n    axios({\r\n      // headers: {\r\n      //   'Access-Control-Allow-Origin': '*',\r\n      // },\r\n      method: \"get\",\r\n      url: URL_TRIP_WORK,\r\n      responseType: \"blob\",\r\n    })\r\n      .then(function (response) {\r\n        var new_zip = new JSZip();\r\n        new_zip.loadAsync(response.data).then(function (zip) {\r\n          zip\r\n            .file(\r\n              \"2018-census-main-means-of-travel-to-work-by-statistical-area.json\"\r\n            )\r\n            .async(\"string\")\r\n            .then(function (data) {\r\n              resolve({ type: \"workTrip\", data: JSON.parse(data) });\r\n              return data;\r\n            });\r\n        });\r\n        return response.data;\r\n      })\r\n      .catch((error) => console.log(error));\r\n  });\r\n};\r\nvar resolveSA2polygons = function () {\r\n  console.log(\"getting Education data\");\r\n  return new Promise((resolve) => {\r\n    axios({\r\n      // headers: {\r\n      //   'Access-Control-Allow-Origin': '*',\r\n      // },\r\n      method: \"get\",\r\n      url: URL_SA2POLYGONS,\r\n      responseType: \"blob\",\r\n    })\r\n      .then(function (response) {\r\n        var new_zip = new JSZip();\r\n        new_zip.loadAsync(response.data).then(function (zip) {\r\n          zip\r\n            .file(\"sa2aggregatewgs84.geojson\")\r\n            .async(\"string\")\r\n            .then(function (data) {\r\n              resolve({ type: \"sa2\", data: JSON.parse(data) });\r\n              return data;\r\n            });\r\n        });\r\n        return response.data;\r\n      })\r\n      .catch((error) => console.log(error));\r\n  });\r\n};\r\n\r\nvar initialisedataparallel = function () {\r\n  console.log(\"==parallel initialisation==\");\r\n  return Promise.all([\r\n    resolveCensusDataEducation(),\r\n    resolveSA2polygons(),\r\n    resolveCensusDataWork(),\r\n  ]).then((data) => {\r\n    SAPOLYGON = data.find((element) => element.type == \"sa2\").data;\r\n    SAPOLYGON.features.forEach((element) => {\r\n      element.id = element.properties.OBJECTID;\r\n    });\r\n    EDUCTAIONNAL_TRIPS = data.find((element) => element.type == \"eductionTrip\")\r\n      .data;\r\n    WORK_TRIPS = data.find((element) => element.type == \"workTrip\").data;\r\n    initMap();\r\n    initDeckglLayers();\r\n    land_district(SAPOLYGON);\r\n    land_Subdistrict(SAPOLYGON);\r\n    stopSpinner();\r\n  });\r\n};\r\ninitialisedataparallel();\r\n"],"sourceRoot":""}